<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0213.2333                               -->
<workbook original-version='18.1' source-build='2019.1.0 (20191.19.0213.2333)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='V_Average Length of Guest Stay (days) ' datatype='real' name='[Average Length of Guest Stay (days) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
        <calculation class='tableau' formula='3.0' />
        <range min='1.0' />
      </column>
      <column caption='V_Capital Expenditure (conversion year only) ' datatype='real' name='[Capital Expenditure (conversion year only) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='20000.0'>
        <calculation class='tableau' formula='20000.0' />
        <range min='1.0' />
      </column>
      <column caption='V_Depreciation Period (years) ' datatype='real' name='[Depreciation Period (years) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
        <calculation class='tableau' formula='3.0' />
        <range min='1.0' />
      </column>
      <column caption='V_Profitable Cutoff ' datatype='real' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
        <calculation class='tableau' formula='5000.0' />
        <desc>
          <formatted-text>
            <run>if higher than this number then it&apos;s considered profitable</run>
          </formatted-text>
        </desc>
        <range min='1.0' />
      </column>
      <column caption='spread_factor' datatype='real' name='[Parameter 11]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='spread_rotation' datatype='real' name='[Parameter 12]' param-domain-type='any' role='measure' type='quantitative' value='50.0'>
        <calculation class='tableau' formula='50.0' />
      </column>
      <column caption='F_Variable cost per guest (Hospitality)' datatype='real' name='[Parameter 13]' param-domain-type='any' role='measure' type='quantitative' value='100.0'>
        <calculation class='tableau' formula='100.0' />
      </column>
      <column caption='F_Repair cost' datatype='real' name='[Parameter 14]' param-domain-type='any' role='measure' type='quantitative' value='6000.0'>
        <calculation class='tableau' formula='6000.0' />
      </column>
      <column caption='V_Long term occupancy rate' datatype='real' name='[Parameter 15]' param-domain-type='any' role='measure' type='quantitative' value='0.97297297000000005'>
        <calculation class='tableau' formula='0.97297297000000005' />
      </column>
      <column caption='Beta' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-0.79139999999999999'>
        <calculation class='tableau' formula='-0.79139999999999999' />
      </column>
      <column caption='Alpha' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.85060000000000002'>
        <calculation class='tableau' formula='0.85060000000000002' />
      </column>
      <column caption='F_Transaction Fees' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='0.29999999999999999'>
        <calculation class='tableau' formula='0.29999999999999999' />
      </column>
      <column caption='F_Average Length of Guest Stay (days)' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='3.0'>
        <calculation class='tableau' formula='3.0' />
      </column>
      <column caption='F_Utility (every year)' datatype='real' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='3600.0'>
        <calculation class='tableau' formula='3600.0' />
      </column>
      <column caption='F_Depreciation Period (years)' datatype='real' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
        <calculation class='tableau' formula='5.0' />
      </column>
      <column caption='F_Capital Expenditure (conversion year only)' datatype='real' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='30000.0'>
        <calculation class='tableau' formula='30000.0' />
      </column>
      <column caption='F_Profitable Cutoff ' datatype='real' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='6000.0'>
        <calculation class='tableau' formula='6000.0' />
      </column>
      <column caption='V_Repair cost ' datatype='real' name='[Repair cost (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6000.0'>
        <calculation class='tableau' formula='6000.0' />
        <range min='1.0' />
      </column>
      <column caption='V_Transaction Fees ' datatype='real' name='[Transaction Fees (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.20000000000000001'>
        <calculation class='tableau' formula='0.20000000000000001' />
        <range min='0.0' />
      </column>
      <column caption='V_Utility (every year) ' datatype='real' name='[Utility (every year) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3600.0'>
        <calculation class='tableau' formula='3600.0' />
        <range min='1.0' />
      </column>
      <column caption='V_Variable cost per guest ' datatype='real' name='[Variable cost per guest (copy)]' param-domain-type='range' role='measure' type='quantitative' value='200.0'>
        <calculation class='tableau' formula='200.0' />
        <range min='1.0' />
      </column>
    </datasource>
    <datasource caption='4- Alternative to &quot;Solver&quot; (Alternative-to-Solver-Template-Spreadsheet-)' inline='true' name='federated.08n46gj1x8tjcb163xkpu0u4h1jb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='dashboard_capstone' name='excel-direct.072ua7q1n5u0m61gfgccx1fu0ckt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/mac/Documents/BA/final/dashboard_capstone.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='map_full' name='textscan.1x97w0o0w47ekt16tgcpd1othjqw'>
            <connection class='textscan' directory='/Users/mac/Documents/BA/final' filename='map_full.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Sheet1].[Watershed ID]' />
              <expression op='[map_full.csv].[Watershed ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.072ua7q1n5u0m61gfgccx1fu0ckt' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:J245:no:A1:J245:0' header='yes' outcome='6'>
              <column datatype='string' name='Watershed ID' ordinal='0' />
              <column datatype='integer' name='ST -  $ 10th percentile rent' ordinal='1' />
              <column datatype='integer' name='$ 90th minus $ 10th' ordinal='2' />
              <column datatype='integer' name='Example $ Rent minus $ 10th' ordinal='3' />
              <column datatype='string' name='property type (Apartment or House)' ordinal='4' />
              <column datatype='integer' name='Number of Bedrooms (1 or 2)' ordinal='5' />
              <column datatype='string' name='city' ordinal='6' />
              <column datatype='string' name='state' ordinal='7' />
              <column datatype='integer' name='zipcode' ordinal='8' />
              <column datatype='real' name='LT Annual Revenue' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.1x97w0o0w47ekt16tgcpd1othjqw' name='map_full.csv' table='[map_full#csv]' type='table'>
            <columns character-set='UTF-16LE' header='yes' locale='en_US' separator='&#9;'>
              <column datatype='string' name='city' ordinal='0' />
              <column datatype='string' name='state' ordinal='1' />
              <column datatype='string' name='Watershed ID' ordinal='2' />
              <column datatype='integer' name='zipcode' ordinal='3' />
              <column datatype='real' name='Latitude (generated)' ordinal='4' />
              <column datatype='real' name='Longitude (generated)' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[$ 90th minus $ 10th]' value='[Sheet1].[$ 90th minus $ 10th]' />
          <map key='[Example $ Rent minus $ 10th]' value='[Sheet1].[Example $ Rent minus $ 10th]' />
          <map key='[LT Annual Revenue]' value='[Sheet1].[LT Annual Revenue]' />
          <map key='[Latitude (generated)]' value='[map_full.csv].[Latitude (generated)]' />
          <map key='[Longitude (generated)]' value='[map_full.csv].[Longitude (generated)]' />
          <map key='[Number of Bedrooms (1 or 2)]' value='[Sheet1].[Number of Bedrooms (1 or 2)]' />
          <map key='[ST -  $ 10th percentile rent]' value='[Sheet1].[ST -  $ 10th percentile rent]' />
          <map key='[Watershed ID (map_full.csv)]' value='[map_full.csv].[Watershed ID]' />
          <map key='[Watershed ID]' value='[Sheet1].[Watershed ID]' />
          <map key='[city (map_full.csv)]' value='[map_full.csv].[city]' />
          <map key='[city]' value='[Sheet1].[city]' />
          <map key='[property type (Apartment or House)]' value='[Sheet1].[property type (Apartment or House)]' />
          <map key='[state (map_full.csv)]' value='[map_full.csv].[state]' />
          <map key='[state]' value='[Sheet1].[state]' />
          <map key='[zipcode (map_full.csv)]' value='[map_full.csv].[zipcode]' />
          <map key='[zipcode]' value='[Sheet1].[zipcode]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Watershed ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Watershed ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Watershed ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ST -  $ 10th percentile rent</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ST -  $ 10th percentile rent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ST -  $ 10th percentile rent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>$ 90th minus $ 10th</remote-name>
            <remote-type>20</remote-type>
            <local-name>[$ 90th minus $ 10th]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>$ 90th minus $ 10th</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Example $ Rent minus $ 10th</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Example $ Rent minus $ 10th]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Example $ Rent minus $ 10th</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property type (Apartment or House)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[property type (Apartment or House)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>property type (Apartment or House)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Bedrooms (1 or 2)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Bedrooms (1 or 2)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number of Bedrooms (1 or 2)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LT Annual Revenue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LT Annual Revenue]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>LT Annual Revenue</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J245:no:A1:J245:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[map_full.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-16LE&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city (map_full.csv)]</local-name>
            <parent-name>[map_full.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (map_full.csv)]</local-name>
            <parent-name>[map_full.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Watershed ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Watershed ID (map_full.csv)]</local-name>
            <parent-name>[map_full.csv]</parent-name>
            <remote-alias>Watershed ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode (map_full.csv)]</local-name>
            <parent-name>[map_full.csv]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude (generated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude (generated)]</local-name>
            <parent-name>[map_full.csv]</parent-name>
            <remote-alias>Latitude (generated)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude (generated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude (generated)]</local-name>
            <parent-name>[map_full.csv]</parent-name>
            <remote-alias>Longitude (generated)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ST $ 90th minus $ 10th' datatype='integer' name='[$ 90th minus $ 10th]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Calculation_1289577671751909401:qk]&quot;' value='Model with Original Parameters' />
          <alias key='&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Net Forecast Change in Cash Flow, Conversion Year:qk]&quot;' value='Cash Flow Year of Conversion' />
          <alias key='&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy):qk]&quot;' value='Model with Chosen Variable' />
        </aliases>
      </column>
      <column datatype='string' name='[Bedroom and Types (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[property type (Apartment or House) &amp; Number of Bedrooms (1 or 2) (Combined)]' new-bin='true'>
          <bin default-name='false' value='&quot;(1 BR House)&quot;'>
            <value>(&quot;R10&quot;,1)</value>
          </bin>
        </calculation>
      </column>
      <column caption='Number of profitable properties' datatype='integer' name='[Calculation_1289577671667187718]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(SUM([F_Profit or not (copy)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='F_ Long term occupancy rate' datatype='real' name='[Calculation_1289577671702589448]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='36/37' />
      </column>
      <column caption='F_ Short term variable cost' datatype='real' name='[Calculation_1289577671730290701]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4118190071114375176]*365/[Parameters].[Parameter 5]*[Parameters].[Parameter 13]' />
      </column>
      <column caption='F_Profit or not' datatype='integer' name='[Calculation_1289577671746412562]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [F_Yearly Profit All (Conversion Year)   (copy)]&gt;=[Parameters].[Parameter 9]&#10;THEN 1&#10;ELSE 0&#10;END' />
      </column>
      <column caption='Yearly profit (conversion, default)' datatype='real' name='[Calculation_1289577671751909401]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1289577671746412562] = 1&#10;THEN [V_Yearly Profit (Conversion Year)  (copy)]&#10;END' />
      </column>
      <column caption='Cash required to convert' datatype='real' name='[Calculation_3333086002874769412]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Capital Expenditure (conversion year only) (copy 2)]*[Calculation_1289577671667187718]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='z_spread_distance' datatype='real' name='[Calculation_3637993759202316288]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Parameter 11]' />
      </column>
      <column caption='z_spread _direction' datatype='real' name='[Calculation_3637993759202418689]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='90* INDEX() / SIZE() + (6.283185 * ([Parameters].[Parameter 12]/360))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='D_Profitability ' datatype='integer' name='[Calculation_3637993759202648066]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Yearly profit (conversion, variable)  (copy)] &gt;= [Parameters].[Parameter 10]&#10;THEN 1&#10;ELSE 0&#10;&#10;END' />
      </column>
      <column caption='jittered_latitude' datatype='real' name='[Calculation_3637993759203852291]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='IF ATTR([Calculation_3637993759202648066]) = 1 THEN&#10;&#10;WINDOW_AVG(AVG([Latitude (generated)]))+([Calculation_3637993759202316288]*SIN([Calculation_3637993759202418689]))&#10;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='jittered_longitude' datatype='real' name='[Calculation_3637993759204450310]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='IF ATTR([Calculation_3637993759202648066]) = 1 &#10;THEN&#10;&#10;WINDOW_AVG(AVG([Longitude (generated)]))+([Calculation_3637993759202316288]*COS([Calculation_3637993759202418689]))&#10;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='ST Nightly rent' datatype='real' name='[Calculation_4118190070884290562]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_4118190071089545219] &gt; [ST -  $ 10th percentile rent]&#10;THEN [Calculation_4118190071089545219]&#10;ELSE [ST -  $ 10th percentile rent]&#10;END' />
      </column>
      <column caption='ST Optimal rent' datatype='real' name='[Calculation_4118190071089545219]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([Parameters].[Parameter 1]*[Calculation_4118190071113396229])/[Calculation_4118190071111614468]-[Parameters].[Parameter 2])*[Calculation_4118190071113621510]' />
      </column>
      <column caption='Interim 1' datatype='real' name='[Calculation_4118190071111614468]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])' />
      </column>
      <column caption='Interim 2' datatype='real' name='[Calculation_4118190071113396229]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ST -  $ 10th percentile rent] - ([$ 90th minus $ 10th]/8)' />
      </column>
      <column caption='Interim 3' datatype='real' name='[Calculation_4118190071113621510]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])/(2*[Parameters].[Parameter 1])' />
      </column>
      <column caption='ST Percentile rent' datatype='real' name='[Calculation_4118190071113969671]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4118190070884290562]-[Calculation_4118190071113396229])/[Calculation_4118190071111614468]' />
      </column>
      <column caption='ST Correct forecast occupancy rate' datatype='real' name='[Calculation_4118190071114375176]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]*[Calculation_4118190071113969671] + [Parameters].[Parameter 2]' />
      </column>
      <column caption='F_Forecast ST Annual Revenues Before Transaction Fees' datatype='real' name='[Calculation_4118190071114657801]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
      </column>
      <column caption='F_Forecast ST Annual Revenues After Transaction Fees' datatype='real' name='[Calculation_4118190071114944522]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4118190071114657801]*(1 - [Parameters].[Parameter 3])' />
      </column>
      <column caption='F_Variable Cost (Conversion year and after)' datatype='real' name='[Calculation_4118190071526051852]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Parameter 5])*[Parameters].[Parameter 13]' />
      </column>
      <column caption='F_New Cash Out (Conversion)' datatype='real' name='[Calculation_4118190071526834189]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-([Parameters].[Parameter 8]) - [Parameters].[Parameter 6] - [Calculation_4118190071526051852]' />
      </column>
      <column caption='F_New Cash Out - each year thereafter' datatype='real' name='[Calculation_4118190071529611278]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[Parameters].[Parameter 6] - ([Calculation_4118190071526051852]) - [Parameters].[Parameter 14]' />
      </column>
      <column caption='F_New Change in Profits, Conversion Year' datatype='real' name='[Calculation_4118190071529881615]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-([Parameters].[Parameter 8]/[Parameters].[Parameter 7]) - [Parameters].[Parameter 6] - ([Calculation_4118190071526051852])' />
      </column>
      <column caption='F_New Change in Profits, Each Year Thereafter' datatype='real' name='[Calculation_4118190071531331600]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-( [Parameters].[Parameter 8]/[Parameters].[Parameter 7]) - [Parameters].[Parameter 6] - ([Calculation_4118190071526051852]) - ([Parameters].[Parameter 14])' />
      </column>
      <column caption='F_Change in Gross Rental Revenue' datatype='real' name='[Calculation_4118190074086834195]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4118190071114944522]-[LT Annual Revenue]' />
      </column>
      <column caption='V_Change in Gross Rental Revenue ' datatype='real' name='[Change in Gross Rental Revenue (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Forecast ST Annual Revenues After Transaction Fees (copy)]-[LT Annual Revenue]' />
      </column>
      <column caption='ST Example $ Rent minus $ 10th' datatype='integer' name='[Example $ Rent minus $ 10th]' role='measure' type='quantitative' />
      <column caption='V_Profit or not ' datatype='integer' name='[F_Profit or not (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [V_Yearly Profit (Conversion Year)  (copy 2)] &gt;=[Parameters].[Parameter 10]&#10;THEN 1&#10;ELSE 0&#10;END' />
      </column>
      <column caption='V_Variable Cost - Conversion Year ' datatype='real' name='[F_Variable Cost - Conversion Year (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Average Length of Guest Stay (days) (copy)])*[Parameters].[Variable cost per guest (copy)]' />
      </column>
      <column caption='F_Yearly Cashflow All (Conversion Year) ' datatype='real' name='[F_Yearly Profit All (Conversion Year)   (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4118190074086834195]+[Calculation_4118190071526834189]' />
      </column>
      <column caption='F_Yearly Profit All (Years after)  ' datatype='real' name='[F_Yearly Profit All (Conversion Year)   (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4118190074086834195]-([Parameters].[Parameter 8] /[Parameters].[Parameter 7]) - [Parameters].[Parameter 6] - ([Calculation_4118190071526051852]) - ([Parameters].[Parameter 14])' />
      </column>
      <column caption='F_Yearly Cashflow All (Years after)  ' datatype='real' name='[F_Yearly Profit All (Years after)   (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4118190074086834195]+[Calculation_4118190071529611278]' />
      </column>
      <column caption='V_Forecast ST Annual Revenues After Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues After Transaction Fees (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Forecast ST Annual Revenues Before Transaction Fees (copy)]*(1 - [Parameters].[Transaction Fees (copy)])' />
      </column>
      <column caption='V_Forecast ST Annual Revenues Before Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues Before Transaction Fees (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
      </column>
      <column aggregation='Avg' caption='My_Latitude ' datatype='real' name='[Latitude (generated)]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='My_Longitude ' datatype='real' name='[Longitude (generated)]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='V_New Cash Out (Conversion)' datatype='real' name='[New Cash Out (Conversion) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-([Parameters].[Capital Expenditure (conversion year only) (copy 2)]) - [Parameters].[Utility (every year) (copy)] - [F_Variable Cost - Conversion Year (copy)]' />
      </column>
      <column caption='V_New Cash Out - each year thereafter ' datatype='real' name='[New Cash Out - each year thereafter (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)]) - [Parameters].[Repair cost (copy)]' />
      </column>
      <column caption='V_New Change in Profits, Conversion Year ' datatype='real' name='[New Change in Profits, Conversion Year (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-([Parameters].[Capital Expenditure (conversion year only) (copy 2)]/[Parameters].[Depreciation Period (years) (copy)]) - [Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)])' />
      </column>
      <column caption='V_New Change in Profits, Each Year Thereafter ' datatype='real' name='[New Change in Profits, Each Year Thereafter (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-([Parameters].[Capital Expenditure (conversion year only) (copy 2)] /[Parameters].[Depreciation Period (years) (copy)]) - [Parameters].[Utility (every year) (copy)]- ([F_Variable Cost - Conversion Year (copy)] ) - ([Parameters].[Repair cost (copy)])' />
      </column>
      <column aggregation='None' datatype='integer' name='[Nightly rent (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Calculation_4118190070884290562]' peg='0' size='68' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Number of Bedrooms (1 or 2)]' role='dimension' type='ordinal' />
      <column caption='ST 10th percentile rent' datatype='integer' name='[ST -  $ 10th percentile rent]' role='measure' type='quantitative' />
      <column caption='V_Yearly Profit All (Later years) ' datatype='real' name='[V_Yearly Profit (Conversion Year)  (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]-([Parameters].[Capital Expenditure (conversion year only) (copy 2)] /[Parameters].[Depreciation Period (years) (copy)]) - [Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)]) - ([Parameters].[Repair cost (copy)])' />
      </column>
      <column caption='F_Yearly Profit All (Conversion Year)  ' datatype='real' name='[V_Yearly Profit (Conversion Year)  (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4118190074086834195]+[Calculation_4118190071529881615]' />
      </column>
      <column caption='V_Yearly Cashflow All (Conversion Year)  ' datatype='real' name='[V_Yearly Profit All (Conversion Year)  (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]+[New Cash Out (Conversion) (copy)]' />
      </column>
      <column caption='V_Yearly Cashflow All (Later years)  ' datatype='real' name='[V_Yearly Profit All (Later years)  (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)] + [New Cash Out - each year thereafter (copy)]' />
      </column>
      <column caption='Watershed ID (map full.csv)' datatype='string' name='[Watershed ID (map_full.csv)]' role='dimension' type='nominal' />
      <column caption='V_Yearly Profit All (Conversion Year) ' datatype='real' name='[Yearly Profit (Conversion Year) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]+[New Change in Profits, Conversion Year (copy)]' />
      </column>
      <column caption='Yearly cashflow (after, default) ' datatype='real' name='[Yearly profit (after, default)  (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1289577671746412562] = 1&#10;THEN [F_Yearly Profit All (Years after)   (copy)]&#10;END' />
      </column>
      <column aggregation='None' datatype='integer' name='[Yearly profit (after, variable)  (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[Yearly profit (conversion, variable)  (copy)]' peg='0' size='10000' />
      </column>
      <column caption='Yearly cashflow (after, variable) ' datatype='real' name='[Yearly profit (after, variable)  (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [F_Profit or not (copy)] = 1&#10;THEN [V_Yearly Profit All (Later years)  (copy)]&#10;END' />
      </column>
      <column caption='Yearly profit (after, default) ' datatype='real' name='[Yearly profit (conversion, default) (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1289577671746412562] = 1&#10;THEN [F_Yearly Profit All (Conversion Year)   (copy)]&#10;END' />
      </column>
      <column caption='Yearly cashflow (conversion, default) ' datatype='real' name='[Yearly profit (conversion, default) (copy 3)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1289577671746412562] = 1&#10;THEN [F_Yearly Profit All (Conversion Year)   (copy 2)]&#10;END' />
      </column>
      <column caption='Yearly profit (conversion, variable) ' datatype='real' name='[Yearly profit (conversion, default) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [F_Profit or not (copy)] = 1&#10;THEN [Yearly Profit (Conversion Year) (copy)]&#10;END' />
      </column>
      <column caption='Yearly cashflow (conversion, variable)  ' datatype='real' name='[Yearly profit (conversion, variable)  (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [F_Profit or not (copy)] = 1&#10;THEN [V_Yearly Profit All (Conversion Year)  (copy)]&#10;END' />
      </column>
      <column caption='Yearly profit (after, variable) ' datatype='real' name='[Yearly profit (conversion, variable)  (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [F_Profit or not (copy)] = 1&#10;THEN [V_Yearly Profit (Conversion Year)  (copy 2)]&#10;END' />
      </column>
      <column caption='City (Map Full.Csv)' datatype='string' name='[city (map_full.csv)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[property type (Apartment or House)]' role='dimension' type='nominal' />
      <column caption='State (Map Full.Csv)' datatype='string' name='[state (map_full.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Zipcode (Map Full.Csv)' datatype='integer' default-format='*00000' name='[zipcode (map_full.csv)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[Yearly profit (conversion, variable)  (copy)]' derivation='Attribute' name='[attr:Yearly profit (conversion, variable)  (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yearly profit (conversion, variable)  (copy)]' derivation='None' name='[none:Yearly profit (conversion, variable)  (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1289577671751909401]' derivation='Sum' name='[sum:Calculation_1289577671751909401:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yearly profit (after, default)  (copy)]' derivation='Sum' name='[sum:Yearly profit (after, default)  (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yearly profit (after, variable)  (copy)]' derivation='Sum' name='[sum:Yearly profit (after, variable)  (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yearly profit (conversion, default) (copy 2)]' derivation='Sum' name='[sum:Yearly profit (conversion, default) (copy 2):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yearly profit (conversion, default) (copy 3)]' derivation='Sum' name='[sum:Yearly profit (conversion, default) (copy 3):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yearly profit (conversion, default) (copy)]' derivation='Sum' name='[sum:Yearly profit (conversion, default) (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yearly profit (conversion, variable)  (copy 2)]' derivation='Sum' name='[sum:Yearly profit (conversion, variable)  (copy 2):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yearly profit (conversion, variable)  (copy)]' derivation='Sum' name='[sum:Yearly profit (conversion, variable)  (copy):qk]' pivot='key' type='quantitative' />
      <group caption='type_prop' name='[Number of Bedrooms (1 or 2) &amp; property type (Apartment or House) (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Number of Bedrooms (1 or 2)]' />
          <groupfilter function='level-members' level='[property type (Apartment or House)]' />
        </groupfilter>
      </group>
      <group caption='Bedroom and Types' name='[property type (Apartment or House) &amp; Number of Bedrooms (1 or 2) (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[property type (Apartment or House)]' />
          <groupfilter function='level-members' level='[Number of Bedrooms (1 or 2)]' />
        </groupfilter>
        <aliases>
          <alias key='(&quot;R10&quot;,1)' value='1 BR House' />
          <alias key='(&quot;R14&quot;,2)' value='2 BR House' />
          <alias key='(&quot;R2&quot;,1)' value='1 BR Apartment' />
          <alias key='(&quot;R6&quot;,2)' value='2 BR Apartment' />
        </aliases>
      </group>
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.38864' measure-ordering='alphabetic' measure-percentage='0.433483' parameter-percentage='0.177877' show-aliased-fields='true' show-hidden-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[attr:Calculation_1305340257649983490:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[cnt:Calculation_1305340257649983490:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Calculation_1305340257649983490:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Calculation_1289577671751909401:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Calculation_1305340257649983490:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Calculation_4118190074088906772:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Calculation_4118190074089095189:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Calculation_4118190074089406486:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Calculation_4118190074089639959:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Model with Original Parameter (conversion) (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Model with Original Parameter (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Model with Variable Parameter (conversion) (cashflow) (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (after, default)  (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy 2):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy 3):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[attr:Yearly profit (conversion, variable)  (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Yearly profit (conversion, variable)  (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Calculation_1305340257650167811:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Model with Original Parameter (conversion) (cashflow) (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Model with Variable Parameter (conversion) (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Model with Variable Parameter (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly Cash Flow (Conversion Year), variable (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly Cash Flow (next 4 years) (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (after, variable)  (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly Profit (Conversion Year) (copy 2):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy 2):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly Profit (each 4 years after) (copy):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[property type (Apartment or House) &amp; Number of Bedrooms (1 or 2) (Combined)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>(&quot;R2&quot;,1)</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>(&quot;R14&quot;,2)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;R10&quot;,1)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;R6&quot;,2)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Bedroom and Types (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;(1 BR House)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;R14, 2&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;R6, 2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;R2, 1&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='V_Average Length of Guest Stay (days) ' datatype='real' name='[Average Length of Guest Stay (days) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
          <range min='1.0' />
        </column>
        <column caption='V_Capital Expenditure (conversion year only) ' datatype='real' name='[Capital Expenditure (conversion year only) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='20000.0'>
          <calculation class='tableau' formula='20000.0' />
          <range min='1.0' />
        </column>
        <column caption='V_Depreciation Period (years) ' datatype='real' name='[Depreciation Period (years) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
          <range min='1.0' />
        </column>
        <column caption='V_Profitable Cutoff ' datatype='real' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
          <calculation class='tableau' formula='5000.0' />
          <desc>
            <formatted-text>
              <run>if higher than this number then it&apos;s considered profitable</run>
            </formatted-text>
          </desc>
          <range min='1.0' />
        </column>
        <column caption='spread_factor' datatype='real' name='[Parameter 11]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
        <column caption='spread_rotation' datatype='real' name='[Parameter 12]' param-domain-type='any' role='measure' type='quantitative' value='50.0'>
          <calculation class='tableau' formula='50.0' />
        </column>
        <column caption='F_Variable cost per guest (Hospitality)' datatype='real' name='[Parameter 13]' param-domain-type='any' role='measure' type='quantitative' value='100.0'>
          <calculation class='tableau' formula='100.0' />
        </column>
        <column caption='F_Repair cost' datatype='real' name='[Parameter 14]' param-domain-type='any' role='measure' type='quantitative' value='6000.0'>
          <calculation class='tableau' formula='6000.0' />
        </column>
        <column caption='Beta' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-0.79139999999999999'>
          <calculation class='tableau' formula='-0.79139999999999999' />
        </column>
        <column caption='Alpha' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.85060000000000002'>
          <calculation class='tableau' formula='0.85060000000000002' />
        </column>
        <column caption='F_Transaction Fees' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='0.29999999999999999'>
          <calculation class='tableau' formula='0.29999999999999999' />
        </column>
        <column caption='F_Average Length of Guest Stay (days)' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
        </column>
        <column caption='F_Utility (every year)' datatype='real' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='3600.0'>
          <calculation class='tableau' formula='3600.0' />
        </column>
        <column caption='F_Depreciation Period (years)' datatype='real' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
        </column>
        <column caption='F_Capital Expenditure (conversion year only)' datatype='real' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='30000.0'>
          <calculation class='tableau' formula='30000.0' />
        </column>
        <column caption='F_Profitable Cutoff ' datatype='real' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='6000.0'>
          <calculation class='tableau' formula='6000.0' />
        </column>
        <column caption='V_Repair cost ' datatype='real' name='[Repair cost (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6000.0'>
          <calculation class='tableau' formula='6000.0' />
          <range min='1.0' />
        </column>
        <column caption='V_Transaction Fees ' datatype='real' name='[Transaction Fees (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.20000000000000001'>
          <calculation class='tableau' formula='0.20000000000000001' />
          <range min='0.0' />
        </column>
        <column caption='V_Utility (every year) ' datatype='real' name='[Utility (every year) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3600.0'>
          <calculation class='tableau' formula='3600.0' />
          <range min='1.0' />
        </column>
        <column caption='V_Variable cost per guest ' datatype='real' name='[Variable cost per guest (copy)]' param-domain-type='range' role='measure' type='quantitative' value='200.0'>
          <calculation class='tableau' formula='200.0' />
          <range min='1.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='yearly profit conversion' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='yearly profit conversion' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='final dashboard' type='sheet' worksheet='Sheet 11' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='final dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='4- Alternative to &quot;Solver&quot; (Alternative-to-Solver-Template-Spreadsheet-)' name='federated.08n46gj1x8tjcb163xkpu0u4h1jb' />
          </datasources>
          <datasource-dependencies datasource='federated.08n46gj1x8tjcb163xkpu0u4h1jb'>
            <column datatype='string' name='[Watershed ID]' role='dimension' type='nominal' />
            <column-instance column='[Watershed ID]' derivation='Count' name='[cnt:Watershed ID:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[cnt:Watershed ID:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Average Length of Guest Stay (days) = 3 nights</run>
                <run>Æ&#10;</run>
                <run bold='true'>Capital Expenditure (conversion year only) = $30000</run>
                <run>Æ&#10;</run>
                <run bold='true'>Depreciation Period (years) = 5 </run>
                <run>Æ&#10;</run>
                <run bold='true'>Repair cost = 6000</run>
                <run>Æ&#10;</run>
                <run bold='true'>Transaction Fees = 30%</run>
                <run>Æ&#10;</run>
                <run bold='true'>Profitable Cutoff  = $6000</run>
                <run>Æ&#10;</run>
                <run bold='true'>Utility (every year) = $3600</run>
                <run>Æ&#10;</run>
                <run bold='true'>Variable cost per guest  = $100</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[cnt:Watershed ID:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{F0B6F159-A1D6-4732-9570-A1877CDB2B15}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#59a14f' fontname='Tableau Bold' fontsize='14'>Yearly Profit</run>
            <run fontalignment='1'>Æ </run>
            <run bold='true' fontalignment='1' fontsize='12'>after conversion </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontsize='12'>(</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='12'>&lt;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_1289577671667187718:qk]&gt;</run>
            <run bold='true' fontalignment='1' fontsize='12'> Individual profitable properties)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='4- Alternative to &quot;Solver&quot; (Alternative-to-Solver-Template-Spreadsheet-)' name='federated.08n46gj1x8tjcb163xkpu0u4h1jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='V_Average Length of Guest Stay (days) ' datatype='real' name='[Average Length of Guest Stay (days) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Capital Expenditure (conversion year only) ' datatype='real' name='[Capital Expenditure (conversion year only) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='20000.0'>
              <calculation class='tableau' formula='20000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Depreciation Period (years) ' datatype='real' name='[Depreciation Period (years) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Profitable Cutoff ' datatype='real' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
              <calculation class='tableau' formula='5000.0' />
              <desc>
                <formatted-text>
                  <run>if higher than this number then it&apos;s considered profitable</run>
                </formatted-text>
              </desc>
              <range min='1.0' />
            </column>
            <column caption='Beta' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-0.79139999999999999'>
              <calculation class='tableau' formula='-0.79139999999999999' />
            </column>
            <column caption='Alpha' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.85060000000000002'>
              <calculation class='tableau' formula='0.85060000000000002' />
            </column>
            <column caption='V_Repair cost ' datatype='real' name='[Repair cost (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Transaction Fees ' datatype='real' name='[Transaction Fees (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.20000000000000001'>
              <calculation class='tableau' formula='0.20000000000000001' />
              <range min='0.0' />
            </column>
            <column caption='V_Utility (every year) ' datatype='real' name='[Utility (every year) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3600.0'>
              <calculation class='tableau' formula='3600.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Variable cost per guest ' datatype='real' name='[Variable cost per guest (copy)]' param-domain-type='range' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
              <range min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08n46gj1x8tjcb163xkpu0u4h1jb'>
            <column caption='ST $ 90th minus $ 10th' datatype='integer' name='[$ 90th minus $ 10th]' role='measure' type='quantitative' />
            <column datatype='string' name='[Bedroom and Types (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[property type (Apartment or House) &amp; Number of Bedrooms (1 or 2) (Combined)]' new-bin='true'>
                <bin default-name='false' value='&quot;(1 BR House)&quot;'>
                  <value>(&quot;R10&quot;,1)</value>
                </bin>
              </calculation>
            </column>
            <column caption='Number of profitable properties' datatype='integer' name='[Calculation_1289577671667187718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM([F_Profit or not (copy)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ST Nightly rent' datatype='real' name='[Calculation_4118190070884290562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_4118190071089545219] &gt; [ST -  $ 10th percentile rent]&#10;THEN [Calculation_4118190071089545219]&#10;ELSE [ST -  $ 10th percentile rent]&#10;END' />
            </column>
            <column caption='ST Optimal rent' datatype='real' name='[Calculation_4118190071089545219]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Parameters].[Parameter 1]*[Calculation_4118190071113396229])/[Calculation_4118190071111614468]-[Parameters].[Parameter 2])*[Calculation_4118190071113621510]' />
            </column>
            <column caption='Interim 1' datatype='real' name='[Calculation_4118190071111614468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])' />
            </column>
            <column caption='Interim 2' datatype='real' name='[Calculation_4118190071113396229]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ST -  $ 10th percentile rent] - ([$ 90th minus $ 10th]/8)' />
            </column>
            <column caption='Interim 3' datatype='real' name='[Calculation_4118190071113621510]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])/(2*[Parameters].[Parameter 1])' />
            </column>
            <column caption='ST Percentile rent' datatype='real' name='[Calculation_4118190071113969671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562]-[Calculation_4118190071113396229])/[Calculation_4118190071111614468]' />
            </column>
            <column caption='ST Correct forecast occupancy rate' datatype='real' name='[Calculation_4118190071114375176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]*[Calculation_4118190071113969671] + [Parameters].[Parameter 2]' />
            </column>
            <column caption='V_Change in Gross Rental Revenue ' datatype='real' name='[Change in Gross Rental Revenue (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues After Transaction Fees (copy)]-[LT Annual Revenue]' />
            </column>
            <column caption='V_Profit or not ' datatype='integer' name='[F_Profit or not (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [V_Yearly Profit (Conversion Year)  (copy 2)] &gt;=[Parameters].[Parameter 10]&#10;THEN 1&#10;ELSE 0&#10;END' />
            </column>
            <column caption='V_Variable Cost - Conversion Year ' datatype='real' name='[F_Variable Cost - Conversion Year (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Average Length of Guest Stay (days) (copy)])*[Parameters].[Variable cost per guest (copy)]' />
            </column>
            <column caption='V_Forecast ST Annual Revenues After Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues After Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues Before Transaction Fees (copy)]*(1 - [Parameters].[Transaction Fees (copy)])' />
            </column>
            <column caption='V_Forecast ST Annual Revenues Before Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues Before Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
            </column>
            <column datatype='real' name='[LT Annual Revenue]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Number of Bedrooms (1 or 2)]' role='dimension' type='ordinal' />
            <column caption='ST 10th percentile rent' datatype='integer' name='[ST -  $ 10th percentile rent]' role='measure' type='quantitative' />
            <column caption='V_Yearly Profit All (Later years) ' datatype='real' name='[V_Yearly Profit (Conversion Year)  (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]-([Parameters].[Capital Expenditure (conversion year only) (copy 2)] /[Parameters].[Depreciation Period (years) (copy)]) - [Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)]) - ([Parameters].[Repair cost (copy)])' />
            </column>
            <column datatype='string' name='[Watershed ID]' role='dimension' type='nominal' />
            <column caption='Yearly profit (after, variable) ' datatype='real' name='[Yearly profit (conversion, variable)  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [F_Profit or not (copy)] = 1&#10;THEN [V_Yearly Profit (Conversion Year)  (copy 2)]&#10;END' />
            </column>
            <column-instance column='[Watershed ID]' derivation='None' name='[none:Watershed ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Yearly profit (conversion, variable)  (copy)]' derivation='None' name='[none:Yearly profit (conversion, variable)  (copy):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[property type (Apartment or House)]' role='dimension' type='nominal' />
            <column-instance column='[Yearly profit (conversion, variable)  (copy)]' derivation='Sum' name='[sum:Yearly profit (conversion, variable)  (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1289577671667187718]' derivation='User' name='[usr:Calculation_1289577671667187718:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Yearly profit (conversion, variable)  (copy):qk]' included-values='non-null' />
          <slices>
            <column>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Yearly profit (conversion, variable)  (copy):qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy):qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='31' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Bedroom and Types (group)]' />
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Watershed ID:nk]' />
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy):qk]' />
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_1289577671667187718:qk]' />
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[property type (Apartment or House) &amp; Number of Bedrooms (1 or 2) (Combined)]' />
            </encodings>
            <reference-line axis-column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy):qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy):qk]</cols>
      </table>
      <simple-id uuid='{81E57D2C-FEA2-46AE-A2AE-6EFADB38B836}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='4- Alternative to &quot;Solver&quot; (Alternative-to-Solver-Template-Spreadsheet-)' name='federated.08n46gj1x8tjcb163xkpu0u4h1jb' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='V_Average Length of Guest Stay (days) ' datatype='real' name='[Average Length of Guest Stay (days) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Capital Expenditure (conversion year only) ' datatype='real' name='[Capital Expenditure (conversion year only) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='20000.0'>
              <calculation class='tableau' formula='20000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Depreciation Period (years) ' datatype='real' name='[Depreciation Period (years) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Profitable Cutoff ' datatype='real' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
              <calculation class='tableau' formula='5000.0' />
              <desc>
                <formatted-text>
                  <run>if higher than this number then it&apos;s considered profitable</run>
                </formatted-text>
              </desc>
              <range min='1.0' />
            </column>
            <column caption='spread_factor' datatype='real' name='[Parameter 11]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
            <column caption='spread_rotation' datatype='real' name='[Parameter 12]' param-domain-type='any' role='measure' type='quantitative' value='50.0'>
              <calculation class='tableau' formula='50.0' />
            </column>
            <column caption='Beta' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-0.79139999999999999'>
              <calculation class='tableau' formula='-0.79139999999999999' />
            </column>
            <column caption='Alpha' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.85060000000000002'>
              <calculation class='tableau' formula='0.85060000000000002' />
            </column>
            <column caption='V_Repair cost ' datatype='real' name='[Repair cost (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Transaction Fees ' datatype='real' name='[Transaction Fees (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.20000000000000001'>
              <calculation class='tableau' formula='0.20000000000000001' />
              <range min='0.0' />
            </column>
            <column caption='V_Utility (every year) ' datatype='real' name='[Utility (every year) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3600.0'>
              <calculation class='tableau' formula='3600.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Variable cost per guest ' datatype='real' name='[Variable cost per guest (copy)]' param-domain-type='range' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
              <range min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08n46gj1x8tjcb163xkpu0u4h1jb'>
            <column caption='ST $ 90th minus $ 10th' datatype='integer' name='[$ 90th minus $ 10th]' role='measure' type='quantitative' />
            <column caption='z_spread_distance' datatype='real' name='[Calculation_3637993759202316288]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 11]' />
            </column>
            <column caption='z_spread _direction' datatype='real' name='[Calculation_3637993759202418689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='90* INDEX() / SIZE() + (6.283185 * ([Parameters].[Parameter 12]/360))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='D_Profitability ' datatype='integer' name='[Calculation_3637993759202648066]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Yearly profit (conversion, variable)  (copy)] &gt;= [Parameters].[Parameter 10]&#10;THEN 1&#10;ELSE 0&#10;&#10;END' />
            </column>
            <column caption='jittered_latitude' datatype='real' name='[Calculation_3637993759203852291]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='IF ATTR([Calculation_3637993759202648066]) = 1 THEN&#10;&#10;WINDOW_AVG(AVG([Latitude (generated)]))+([Calculation_3637993759202316288]*SIN([Calculation_3637993759202418689]))&#10;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='jittered_longitude' datatype='real' name='[Calculation_3637993759204450310]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='IF ATTR([Calculation_3637993759202648066]) = 1 &#10;THEN&#10;&#10;WINDOW_AVG(AVG([Longitude (generated)]))+([Calculation_3637993759202316288]*COS([Calculation_3637993759202418689]))&#10;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ST Nightly rent' datatype='real' name='[Calculation_4118190070884290562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_4118190071089545219] &gt; [ST -  $ 10th percentile rent]&#10;THEN [Calculation_4118190071089545219]&#10;ELSE [ST -  $ 10th percentile rent]&#10;END' />
            </column>
            <column caption='ST Optimal rent' datatype='real' name='[Calculation_4118190071089545219]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Parameters].[Parameter 1]*[Calculation_4118190071113396229])/[Calculation_4118190071111614468]-[Parameters].[Parameter 2])*[Calculation_4118190071113621510]' />
            </column>
            <column caption='Interim 1' datatype='real' name='[Calculation_4118190071111614468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])' />
            </column>
            <column caption='Interim 2' datatype='real' name='[Calculation_4118190071113396229]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ST -  $ 10th percentile rent] - ([$ 90th minus $ 10th]/8)' />
            </column>
            <column caption='Interim 3' datatype='real' name='[Calculation_4118190071113621510]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])/(2*[Parameters].[Parameter 1])' />
            </column>
            <column caption='ST Percentile rent' datatype='real' name='[Calculation_4118190071113969671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562]-[Calculation_4118190071113396229])/[Calculation_4118190071111614468]' />
            </column>
            <column caption='ST Correct forecast occupancy rate' datatype='real' name='[Calculation_4118190071114375176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]*[Calculation_4118190071113969671] + [Parameters].[Parameter 2]' />
            </column>
            <column caption='V_Change in Gross Rental Revenue ' datatype='real' name='[Change in Gross Rental Revenue (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues After Transaction Fees (copy)]-[LT Annual Revenue]' />
            </column>
            <column caption='V_Profit or not ' datatype='integer' name='[F_Profit or not (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [V_Yearly Profit (Conversion Year)  (copy 2)] &gt;=[Parameters].[Parameter 10]&#10;THEN 1&#10;ELSE 0&#10;END' />
            </column>
            <column caption='V_Variable Cost - Conversion Year ' datatype='real' name='[F_Variable Cost - Conversion Year (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Average Length of Guest Stay (days) (copy)])*[Parameters].[Variable cost per guest (copy)]' />
            </column>
            <column caption='V_Forecast ST Annual Revenues After Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues After Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues Before Transaction Fees (copy)]*(1 - [Parameters].[Transaction Fees (copy)])' />
            </column>
            <column caption='V_Forecast ST Annual Revenues Before Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues Before Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
            </column>
            <column datatype='real' name='[LT Annual Revenue]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='My_Latitude ' datatype='real' name='[Latitude (generated)]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='My_Longitude ' datatype='real' name='[Longitude (generated)]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Number of Bedrooms (1 or 2)]' role='dimension' type='ordinal' />
            <column caption='ST 10th percentile rent' datatype='integer' name='[ST -  $ 10th percentile rent]' role='measure' type='quantitative' />
            <column caption='V_Yearly Profit All (Later years) ' datatype='real' name='[V_Yearly Profit (Conversion Year)  (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]-([Parameters].[Capital Expenditure (conversion year only) (copy 2)] /[Parameters].[Depreciation Period (years) (copy)]) - [Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)]) - ([Parameters].[Repair cost (copy)])' />
            </column>
            <column datatype='string' name='[Watershed ID]' role='dimension' type='nominal' />
            <column caption='Yearly profit (after, variable) ' datatype='real' name='[Yearly profit (conversion, variable)  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [F_Profit or not (copy)] = 1&#10;THEN [V_Yearly Profit (Conversion Year)  (copy 2)]&#10;END' />
            </column>
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Latitude (generated)]' derivation='None' name='[none:Latitude (generated):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude (generated)]' derivation='None' name='[none:Longitude (generated):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Watershed ID]' derivation='None' name='[none:Watershed ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[zipcode (map_full.csv)]' derivation='None' name='[none:zipcode (map_full.csv):ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[property type (Apartment or House)]' role='dimension' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[$ 90th minus $ 10th]' derivation='Sum' name='[sum:$ 90th minus $ 10th:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3637993759203852291]' derivation='User' name='[usr:Calculation_3637993759203852291:qk:47]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Longitude (generated)]' ordering-type='Field'>
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Watershed ID]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[city]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Latitude (generated)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Longitude (generated)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Number of Bedrooms (1 or 2)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[property type (Apartment or House)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[state]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[zipcode (map_full.csv)]' />
                <sort direction='ASC' using='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:$ 90th minus $ 10th:qk]' />
              </table-calc>
              <table-calc field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Calculation_3637993759202418689]' level-break='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Longitude (generated)]' ordering-type='Field'>
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Latitude (generated)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Longitude (generated)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[city]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Number of Bedrooms (1 or 2)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[property type (Apartment or House)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[state]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Watershed ID]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[zipcode (map_full.csv)]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_3637993759204450310]' derivation='User' name='[usr:Calculation_3637993759204450310:qk:39]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Number of Bedrooms (1 or 2)]' ordering-type='Field'>
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[city]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Latitude (generated)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Longitude (generated)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Number of Bedrooms (1 or 2)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[property type (Apartment or House)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[state]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Watershed ID]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[zipcode (map_full.csv)]' />
              </table-calc>
              <table-calc field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Calculation_3637993759202418689]' level-break='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Latitude (generated)]' ordering-type='Field'>
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Longitude (generated)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Latitude (generated)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[property type (Apartment or House)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[city]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Number of Bedrooms (1 or 2)]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[state]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Watershed ID]' />
                <order field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[zipcode (map_full.csv)]' />
              </table-calc>
            </column-instance>
            <column caption='Zipcode (Map Full.Csv)' datatype='integer' default-format='*00000' name='[zipcode (map_full.csv)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_3637993759203852291:qk:47]' field-type='quantitative' max='8378277.349287359' min='1313518.4262123359' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_3637993759204450310:qk:39]' field-type='quantitative' max='-5010480.7576392889' min='-16808394.608915202' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_3637993759204450310:qk:39]' value='false' />
            <format attr='break-on-special' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_3637993759204450310:qk:39]' value='false' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Number of Bedrooms (1 or 2) &amp; property type (Apartment or House) (Combined)]' />
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Watershed ID:nk]' />
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:zipcode (map_full.csv):ok]' />
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:state:nk]' />
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Latitude (generated):qk]' />
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Longitude (generated):qk]' />
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>city:&#9;&lt;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>My_Latitude :&#9;</run>
                <run bold='true'>&lt;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Latitude (generated):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>My_Longitude :&#9;</run>
                <run bold='true'>&lt;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Longitude (generated):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>state:&#9;</run>
                <run bold='true'>&lt;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:state:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Watershed ID:&#9;</run>
                <run bold='true'>&lt;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Watershed ID:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Zipcode (Map Full.Csv):&#9;</run>
                <run bold='true'>&lt;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:zipcode (map_full.csv):ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>type_prop:&#9;</run>
                <run bold='true'>&lt;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Number of Bedrooms (1 or 2) &amp; property type (Apartment or House) (Combined)]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>jittered_latitude:&#9;</run>
                <run bold='true'>&lt;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_3637993759203852291:qk:47]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>jittered_longitude:&#9;</run>
                <run bold='true'>&lt;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_3637993759204450310:qk:39]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>The most profitable is &lt;COUNT(city)&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.75762432813644409' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_3637993759203852291:qk:47]</rows>
        <cols>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_3637993759204450310:qk:39]</cols>
      </table>
      <simple-id uuid='{13EE12B0-BD8C-4B8D-82E1-872D959ADDF0}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='4- Alternative to &quot;Solver&quot; (Alternative-to-Solver-Template-Spreadsheet-)' name='federated.08n46gj1x8tjcb163xkpu0u4h1jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='V_Average Length of Guest Stay (days) ' datatype='real' name='[Average Length of Guest Stay (days) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Capital Expenditure (conversion year only) ' datatype='real' name='[Capital Expenditure (conversion year only) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='20000.0'>
              <calculation class='tableau' formula='20000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Depreciation Period (years) ' datatype='real' name='[Depreciation Period (years) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Profitable Cutoff ' datatype='real' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
              <calculation class='tableau' formula='5000.0' />
              <desc>
                <formatted-text>
                  <run>if higher than this number then it&apos;s considered profitable</run>
                </formatted-text>
              </desc>
              <range min='1.0' />
            </column>
            <column caption='Beta' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-0.79139999999999999'>
              <calculation class='tableau' formula='-0.79139999999999999' />
            </column>
            <column caption='Alpha' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.85060000000000002'>
              <calculation class='tableau' formula='0.85060000000000002' />
            </column>
            <column caption='V_Repair cost ' datatype='real' name='[Repair cost (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Transaction Fees ' datatype='real' name='[Transaction Fees (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.20000000000000001'>
              <calculation class='tableau' formula='0.20000000000000001' />
              <range min='0.0' />
            </column>
            <column caption='V_Utility (every year) ' datatype='real' name='[Utility (every year) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3600.0'>
              <calculation class='tableau' formula='3600.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Variable cost per guest ' datatype='real' name='[Variable cost per guest (copy)]' param-domain-type='range' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
              <range min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08n46gj1x8tjcb163xkpu0u4h1jb'>
            <column caption='ST $ 90th minus $ 10th' datatype='integer' name='[$ 90th minus $ 10th]' role='measure' type='quantitative' />
            <column caption='Number of profitable properties' datatype='integer' name='[Calculation_1289577671667187718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM([F_Profit or not (copy)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ST Nightly rent' datatype='real' name='[Calculation_4118190070884290562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_4118190071089545219] &gt; [ST -  $ 10th percentile rent]&#10;THEN [Calculation_4118190071089545219]&#10;ELSE [ST -  $ 10th percentile rent]&#10;END' />
            </column>
            <column caption='ST Optimal rent' datatype='real' name='[Calculation_4118190071089545219]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Parameters].[Parameter 1]*[Calculation_4118190071113396229])/[Calculation_4118190071111614468]-[Parameters].[Parameter 2])*[Calculation_4118190071113621510]' />
            </column>
            <column caption='Interim 1' datatype='real' name='[Calculation_4118190071111614468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])' />
            </column>
            <column caption='Interim 2' datatype='real' name='[Calculation_4118190071113396229]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ST -  $ 10th percentile rent] - ([$ 90th minus $ 10th]/8)' />
            </column>
            <column caption='Interim 3' datatype='real' name='[Calculation_4118190071113621510]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])/(2*[Parameters].[Parameter 1])' />
            </column>
            <column caption='ST Percentile rent' datatype='real' name='[Calculation_4118190071113969671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562]-[Calculation_4118190071113396229])/[Calculation_4118190071111614468]' />
            </column>
            <column caption='ST Correct forecast occupancy rate' datatype='real' name='[Calculation_4118190071114375176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]*[Calculation_4118190071113969671] + [Parameters].[Parameter 2]' />
            </column>
            <column caption='V_Change in Gross Rental Revenue ' datatype='real' name='[Change in Gross Rental Revenue (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues After Transaction Fees (copy)]-[LT Annual Revenue]' />
            </column>
            <column caption='V_Profit or not ' datatype='integer' name='[F_Profit or not (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [V_Yearly Profit (Conversion Year)  (copy 2)] &gt;=[Parameters].[Parameter 10]&#10;THEN 1&#10;ELSE 0&#10;END' />
            </column>
            <column caption='V_Variable Cost - Conversion Year ' datatype='real' name='[F_Variable Cost - Conversion Year (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Average Length of Guest Stay (days) (copy)])*[Parameters].[Variable cost per guest (copy)]' />
            </column>
            <column caption='V_Forecast ST Annual Revenues After Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues After Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues Before Transaction Fees (copy)]*(1 - [Parameters].[Transaction Fees (copy)])' />
            </column>
            <column caption='V_Forecast ST Annual Revenues Before Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues Before Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
            </column>
            <column datatype='real' name='[LT Annual Revenue]' role='measure' type='quantitative' />
            <column caption='ST 10th percentile rent' datatype='integer' name='[ST -  $ 10th percentile rent]' role='measure' type='quantitative' />
            <column caption='V_Yearly Profit All (Later years) ' datatype='real' name='[V_Yearly Profit (Conversion Year)  (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]-([Parameters].[Capital Expenditure (conversion year only) (copy 2)] /[Parameters].[Depreciation Period (years) (copy)]) - [Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)]) - ([Parameters].[Repair cost (copy)])' />
            </column>
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1289577671667187718]' derivation='User' name='[usr:Calculation_1289577671667187718:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]'>
            <groupfilter count='2' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([city])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Austin&quot;' function='range' level='[none:city:nk]' to='&quot;San Francisco&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Austin&quot;</bucket>
              <bucket>&quot;Miami&quot;</bucket>
              <bucket>&quot;San Diego&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Chicago&quot;</bucket>
              <bucket>&quot;Palo Alto&quot;</bucket>
              <bucket>&quot;Denver&quot;</bucket>
              <bucket>&quot;San Francisco&quot;</bucket>
              <bucket>&quot;Omaha&quot;</bucket>
              <bucket>&quot;Bentonville&quot;</bucket>
              <bucket>&quot;Richmond&quot;</bucket>
              <bucket>&quot;Columbus&quot;</bucket>
              <bucket>&quot;Charleston&quot;</bucket>
              <bucket>&quot;Chapel Hill&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='total' scope='rows' value='12' />
            <format attr='color' data-class='subtotal' value='#59a14f' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='normal' />
            <format attr='font-weight' data-class='total' scope='rows' value='normal' />
            <format attr='color' data-class='total' scope='rows' value='#000000' />
            <format attr='color' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]' value='#59a14f' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]' value='#59a14f' />
            <format attr='color' data-class='total' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]' value='#4e79a7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#59a14f' />
            <format attr='font-size' scope='cols' value='12' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='font-size' scope='rows' value='12' />
            <format attr='color' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:state:nk]' />
              <text column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_1289577671667187718:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{8D28DB14-3CCC-41B6-81D0-C208254B6346}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontsize='12'>Cash required to convert:</run>
            <run>Æ </run>
            <run bold='true' fontsize='18'>$&lt;[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_3333086002874769412:qk]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='4- Alternative to &quot;Solver&quot; (Alternative-to-Solver-Template-Spreadsheet-)' name='federated.08n46gj1x8tjcb163xkpu0u4h1jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='V_Average Length of Guest Stay (days) ' datatype='real' name='[Average Length of Guest Stay (days) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Capital Expenditure (conversion year only) ' datatype='real' name='[Capital Expenditure (conversion year only) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='20000.0'>
              <calculation class='tableau' formula='20000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Depreciation Period (years) ' datatype='real' name='[Depreciation Period (years) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Profitable Cutoff ' datatype='real' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
              <calculation class='tableau' formula='5000.0' />
              <desc>
                <formatted-text>
                  <run>if higher than this number then it&apos;s considered profitable</run>
                </formatted-text>
              </desc>
              <range min='1.0' />
            </column>
            <column caption='Beta' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-0.79139999999999999'>
              <calculation class='tableau' formula='-0.79139999999999999' />
            </column>
            <column caption='Alpha' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.85060000000000002'>
              <calculation class='tableau' formula='0.85060000000000002' />
            </column>
            <column caption='V_Repair cost ' datatype='real' name='[Repair cost (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Transaction Fees ' datatype='real' name='[Transaction Fees (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.20000000000000001'>
              <calculation class='tableau' formula='0.20000000000000001' />
              <range min='0.0' />
            </column>
            <column caption='V_Utility (every year) ' datatype='real' name='[Utility (every year) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3600.0'>
              <calculation class='tableau' formula='3600.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Variable cost per guest ' datatype='real' name='[Variable cost per guest (copy)]' param-domain-type='range' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
              <range min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08n46gj1x8tjcb163xkpu0u4h1jb'>
            <column caption='ST $ 90th minus $ 10th' datatype='integer' name='[$ 90th minus $ 10th]' role='measure' type='quantitative' />
            <column caption='Number of profitable properties' datatype='integer' name='[Calculation_1289577671667187718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM([F_Profit or not (copy)]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Cash required to convert' datatype='real' name='[Calculation_3333086002874769412]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Capital Expenditure (conversion year only) (copy 2)]*[Calculation_1289577671667187718]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='ST Nightly rent' datatype='real' name='[Calculation_4118190070884290562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_4118190071089545219] &gt; [ST -  $ 10th percentile rent]&#10;THEN [Calculation_4118190071089545219]&#10;ELSE [ST -  $ 10th percentile rent]&#10;END' />
            </column>
            <column caption='ST Optimal rent' datatype='real' name='[Calculation_4118190071089545219]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Parameters].[Parameter 1]*[Calculation_4118190071113396229])/[Calculation_4118190071111614468]-[Parameters].[Parameter 2])*[Calculation_4118190071113621510]' />
            </column>
            <column caption='Interim 1' datatype='real' name='[Calculation_4118190071111614468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])' />
            </column>
            <column caption='Interim 2' datatype='real' name='[Calculation_4118190071113396229]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ST -  $ 10th percentile rent] - ([$ 90th minus $ 10th]/8)' />
            </column>
            <column caption='Interim 3' datatype='real' name='[Calculation_4118190071113621510]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])/(2*[Parameters].[Parameter 1])' />
            </column>
            <column caption='ST Percentile rent' datatype='real' name='[Calculation_4118190071113969671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562]-[Calculation_4118190071113396229])/[Calculation_4118190071111614468]' />
            </column>
            <column caption='ST Correct forecast occupancy rate' datatype='real' name='[Calculation_4118190071114375176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]*[Calculation_4118190071113969671] + [Parameters].[Parameter 2]' />
            </column>
            <column caption='V_Change in Gross Rental Revenue ' datatype='real' name='[Change in Gross Rental Revenue (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues After Transaction Fees (copy)]-[LT Annual Revenue]' />
            </column>
            <column caption='V_Profit or not ' datatype='integer' name='[F_Profit or not (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [V_Yearly Profit (Conversion Year)  (copy 2)] &gt;=[Parameters].[Parameter 10]&#10;THEN 1&#10;ELSE 0&#10;END' />
            </column>
            <column caption='V_Variable Cost - Conversion Year ' datatype='real' name='[F_Variable Cost - Conversion Year (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Average Length of Guest Stay (days) (copy)])*[Parameters].[Variable cost per guest (copy)]' />
            </column>
            <column caption='V_Forecast ST Annual Revenues After Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues After Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues Before Transaction Fees (copy)]*(1 - [Parameters].[Transaction Fees (copy)])' />
            </column>
            <column caption='V_Forecast ST Annual Revenues Before Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues Before Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
            </column>
            <column datatype='real' name='[LT Annual Revenue]' role='measure' type='quantitative' />
            <column caption='ST 10th percentile rent' datatype='integer' name='[ST -  $ 10th percentile rent]' role='measure' type='quantitative' />
            <column caption='V_Yearly Profit All (Later years) ' datatype='real' name='[V_Yearly Profit (Conversion Year)  (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]-([Parameters].[Capital Expenditure (conversion year only) (copy 2)] /[Parameters].[Depreciation Period (years) (copy)]) - [Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)]) - ([Parameters].[Repair cost (copy)])' />
            </column>
            <column-instance column='[Calculation_3333086002874769412]' derivation='User' name='[usr:Calculation_3333086002874769412:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Calculation_1289577671667187718]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='cols' value='#ffffff' />
            <format attr='color' data-class='subtotal' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#ffffff' />
            <format attr='background-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#fffef5' />
            <format attr='color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_3333086002874769412:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <tooltip column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_3333086002874769412:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B57B5E76-53AA-4383-9751-9ED0B2C4E03C}' />
    </worksheet>
    <worksheet name='cash flow conversion'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='9'>Yearly Cash Flow (Conversion Year)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='4- Alternative to &quot;Solver&quot; (Alternative-to-Solver-Template-Spreadsheet-)' name='federated.08n46gj1x8tjcb163xkpu0u4h1jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='V_Average Length of Guest Stay (days) ' datatype='real' name='[Average Length of Guest Stay (days) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Capital Expenditure (conversion year only) ' datatype='real' name='[Capital Expenditure (conversion year only) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='20000.0'>
              <calculation class='tableau' formula='20000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Depreciation Period (years) ' datatype='real' name='[Depreciation Period (years) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Profitable Cutoff ' datatype='real' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
              <calculation class='tableau' formula='5000.0' />
              <desc>
                <formatted-text>
                  <run>if higher than this number then it&apos;s considered profitable</run>
                </formatted-text>
              </desc>
              <range min='1.0' />
            </column>
            <column caption='F_Variable cost per guest (Hospitality)' datatype='real' name='[Parameter 13]' param-domain-type='any' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
            </column>
            <column caption='F_Repair cost' datatype='real' name='[Parameter 14]' param-domain-type='any' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
            </column>
            <column caption='Beta' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-0.79139999999999999'>
              <calculation class='tableau' formula='-0.79139999999999999' />
            </column>
            <column caption='Alpha' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.85060000000000002'>
              <calculation class='tableau' formula='0.85060000000000002' />
            </column>
            <column caption='F_Transaction Fees' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='0.29999999999999999'>
              <calculation class='tableau' formula='0.29999999999999999' />
            </column>
            <column caption='F_Average Length of Guest Stay (days)' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
            </column>
            <column caption='F_Utility (every year)' datatype='real' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='3600.0'>
              <calculation class='tableau' formula='3600.0' />
            </column>
            <column caption='F_Depreciation Period (years)' datatype='real' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
            <column caption='F_Capital Expenditure (conversion year only)' datatype='real' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='30000.0'>
              <calculation class='tableau' formula='30000.0' />
            </column>
            <column caption='F_Profitable Cutoff ' datatype='real' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
            </column>
            <column caption='V_Repair cost ' datatype='real' name='[Repair cost (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Transaction Fees ' datatype='real' name='[Transaction Fees (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.20000000000000001'>
              <calculation class='tableau' formula='0.20000000000000001' />
              <range min='0.0' />
            </column>
            <column caption='V_Utility (every year) ' datatype='real' name='[Utility (every year) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3600.0'>
              <calculation class='tableau' formula='3600.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Variable cost per guest ' datatype='real' name='[Variable cost per guest (copy)]' param-domain-type='range' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
              <range min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08n46gj1x8tjcb163xkpu0u4h1jb'>
            <column caption='ST $ 90th minus $ 10th' datatype='integer' name='[$ 90th minus $ 10th]' role='measure' type='quantitative' />
            <column caption='F_Profit or not' datatype='integer' name='[Calculation_1289577671746412562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [F_Yearly Profit All (Conversion Year)   (copy)]&gt;=[Parameters].[Parameter 9]&#10;THEN 1&#10;ELSE 0&#10;END' />
            </column>
            <column caption='ST Nightly rent' datatype='real' name='[Calculation_4118190070884290562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_4118190071089545219] &gt; [ST -  $ 10th percentile rent]&#10;THEN [Calculation_4118190071089545219]&#10;ELSE [ST -  $ 10th percentile rent]&#10;END' />
            </column>
            <column caption='ST Optimal rent' datatype='real' name='[Calculation_4118190071089545219]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Parameters].[Parameter 1]*[Calculation_4118190071113396229])/[Calculation_4118190071111614468]-[Parameters].[Parameter 2])*[Calculation_4118190071113621510]' />
            </column>
            <column caption='Interim 1' datatype='real' name='[Calculation_4118190071111614468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])' />
            </column>
            <column caption='Interim 2' datatype='real' name='[Calculation_4118190071113396229]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ST -  $ 10th percentile rent] - ([$ 90th minus $ 10th]/8)' />
            </column>
            <column caption='Interim 3' datatype='real' name='[Calculation_4118190071113621510]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])/(2*[Parameters].[Parameter 1])' />
            </column>
            <column caption='ST Percentile rent' datatype='real' name='[Calculation_4118190071113969671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562]-[Calculation_4118190071113396229])/[Calculation_4118190071111614468]' />
            </column>
            <column caption='ST Correct forecast occupancy rate' datatype='real' name='[Calculation_4118190071114375176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]*[Calculation_4118190071113969671] + [Parameters].[Parameter 2]' />
            </column>
            <column caption='F_Forecast ST Annual Revenues Before Transaction Fees' datatype='real' name='[Calculation_4118190071114657801]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
            </column>
            <column caption='F_Forecast ST Annual Revenues After Transaction Fees' datatype='real' name='[Calculation_4118190071114944522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114657801]*(1 - [Parameters].[Parameter 3])' />
            </column>
            <column caption='F_Variable Cost (Conversion year and after)' datatype='real' name='[Calculation_4118190071526051852]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Parameter 5])*[Parameters].[Parameter 13]' />
            </column>
            <column caption='F_New Cash Out (Conversion)' datatype='real' name='[Calculation_4118190071526834189]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-([Parameters].[Parameter 8]) - [Parameters].[Parameter 6] - [Calculation_4118190071526051852]' />
            </column>
            <column caption='F_Change in Gross Rental Revenue' datatype='real' name='[Calculation_4118190074086834195]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114944522]-[LT Annual Revenue]' />
            </column>
            <column caption='V_Change in Gross Rental Revenue ' datatype='real' name='[Change in Gross Rental Revenue (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues After Transaction Fees (copy)]-[LT Annual Revenue]' />
            </column>
            <column caption='V_Profit or not ' datatype='integer' name='[F_Profit or not (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [V_Yearly Profit (Conversion Year)  (copy 2)] &gt;=[Parameters].[Parameter 10]&#10;THEN 1&#10;ELSE 0&#10;END' />
            </column>
            <column caption='V_Variable Cost - Conversion Year ' datatype='real' name='[F_Variable Cost - Conversion Year (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Average Length of Guest Stay (days) (copy)])*[Parameters].[Variable cost per guest (copy)]' />
            </column>
            <column caption='F_Yearly Cashflow All (Conversion Year) ' datatype='real' name='[F_Yearly Profit All (Conversion Year)   (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190074086834195]+[Calculation_4118190071526834189]' />
            </column>
            <column caption='F_Yearly Profit All (Years after)  ' datatype='real' name='[F_Yearly Profit All (Conversion Year)   (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190074086834195]-([Parameters].[Parameter 8] /[Parameters].[Parameter 7]) - [Parameters].[Parameter 6] - ([Calculation_4118190071526051852]) - ([Parameters].[Parameter 14])' />
            </column>
            <column caption='V_Forecast ST Annual Revenues After Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues After Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues Before Transaction Fees (copy)]*(1 - [Parameters].[Transaction Fees (copy)])' />
            </column>
            <column caption='V_Forecast ST Annual Revenues Before Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues Before Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
            </column>
            <column datatype='real' name='[LT Annual Revenue]' role='measure' type='quantitative' />
            <column caption='V_New Cash Out (Conversion)' datatype='real' name='[New Cash Out (Conversion) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-([Parameters].[Capital Expenditure (conversion year only) (copy 2)]) - [Parameters].[Utility (every year) (copy)] - [F_Variable Cost - Conversion Year (copy)]' />
            </column>
            <column caption='ST 10th percentile rent' datatype='integer' name='[ST -  $ 10th percentile rent]' role='measure' type='quantitative' />
            <column caption='V_Yearly Profit All (Later years) ' datatype='real' name='[V_Yearly Profit (Conversion Year)  (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]-([Parameters].[Capital Expenditure (conversion year only) (copy 2)] /[Parameters].[Depreciation Period (years) (copy)]) - [Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)]) - ([Parameters].[Repair cost (copy)])' />
            </column>
            <column caption='V_Yearly Cashflow All (Conversion Year)  ' datatype='real' name='[V_Yearly Profit All (Conversion Year)  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]+[New Cash Out (Conversion) (copy)]' />
            </column>
            <column caption='Yearly cashflow (conversion, default) ' datatype='real' name='[Yearly profit (conversion, default) (copy 3)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1289577671746412562] = 1&#10;THEN [F_Yearly Profit All (Conversion Year)   (copy 2)]&#10;END' />
            </column>
            <column caption='Yearly cashflow (conversion, variable)  ' datatype='real' name='[Yearly profit (conversion, variable)  (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [F_Profit or not (copy)] = 1&#10;THEN [V_Yearly Profit All (Conversion Year)  (copy)]&#10;END' />
            </column>
            <column-instance column='[Yearly profit (conversion, default) (copy 3)]' derivation='Sum' name='[sum:Yearly profit (conversion, default) (copy 3):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly profit (conversion, variable)  (copy 2)]' derivation='Sum' name='[sum:Yearly profit (conversion, variable)  (copy 2):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy 2):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy 2):qk]' scope='rows' value='false' />
            <format attr='render-fold-reversed' value='true' />
            <encoding attr='space' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy 3):qk]' field-type='quantitative' major-origin='0.0' major-spacing='500000.0' max='1500000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy 3):qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='78' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy 3):qk]' value='c&quot;$&quot;#,##0,,.0M;-&quot;$&quot;#,##0,,.0M' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='240' />
                <format attr='maxheight' value='240' />
                <format attr='minwidth' value='78' />
                <format attr='maxwidth' value='78' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy 3):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' />
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy 2):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy 2):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy 3):qk] + [federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy 2):qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{2244411B-817B-4A99-9664-55D3A4B6CE7E}' />
    </worksheet>
    <worksheet name='cash flow year after'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='9'>Yearly Cash Flow (Year after)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='4- Alternative to &quot;Solver&quot; (Alternative-to-Solver-Template-Spreadsheet-)' name='federated.08n46gj1x8tjcb163xkpu0u4h1jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='V_Average Length of Guest Stay (days) ' datatype='real' name='[Average Length of Guest Stay (days) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Capital Expenditure (conversion year only) ' datatype='real' name='[Capital Expenditure (conversion year only) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='20000.0'>
              <calculation class='tableau' formula='20000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Depreciation Period (years) ' datatype='real' name='[Depreciation Period (years) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Profitable Cutoff ' datatype='real' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
              <calculation class='tableau' formula='5000.0' />
              <desc>
                <formatted-text>
                  <run>if higher than this number then it&apos;s considered profitable</run>
                </formatted-text>
              </desc>
              <range min='1.0' />
            </column>
            <column caption='F_Variable cost per guest (Hospitality)' datatype='real' name='[Parameter 13]' param-domain-type='any' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
            </column>
            <column caption='F_Repair cost' datatype='real' name='[Parameter 14]' param-domain-type='any' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
            </column>
            <column caption='Beta' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-0.79139999999999999'>
              <calculation class='tableau' formula='-0.79139999999999999' />
            </column>
            <column caption='Alpha' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.85060000000000002'>
              <calculation class='tableau' formula='0.85060000000000002' />
            </column>
            <column caption='F_Transaction Fees' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='0.29999999999999999'>
              <calculation class='tableau' formula='0.29999999999999999' />
            </column>
            <column caption='F_Average Length of Guest Stay (days)' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
            </column>
            <column caption='F_Utility (every year)' datatype='real' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='3600.0'>
              <calculation class='tableau' formula='3600.0' />
            </column>
            <column caption='F_Depreciation Period (years)' datatype='real' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
            <column caption='F_Capital Expenditure (conversion year only)' datatype='real' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='30000.0'>
              <calculation class='tableau' formula='30000.0' />
            </column>
            <column caption='F_Profitable Cutoff ' datatype='real' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
            </column>
            <column caption='V_Repair cost ' datatype='real' name='[Repair cost (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Transaction Fees ' datatype='real' name='[Transaction Fees (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.20000000000000001'>
              <calculation class='tableau' formula='0.20000000000000001' />
              <range min='0.0' />
            </column>
            <column caption='V_Utility (every year) ' datatype='real' name='[Utility (every year) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3600.0'>
              <calculation class='tableau' formula='3600.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Variable cost per guest ' datatype='real' name='[Variable cost per guest (copy)]' param-domain-type='range' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
              <range min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08n46gj1x8tjcb163xkpu0u4h1jb'>
            <column caption='ST $ 90th minus $ 10th' datatype='integer' name='[$ 90th minus $ 10th]' role='measure' type='quantitative' />
            <column caption='F_Profit or not' datatype='integer' name='[Calculation_1289577671746412562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [F_Yearly Profit All (Conversion Year)   (copy)]&gt;=[Parameters].[Parameter 9]&#10;THEN 1&#10;ELSE 0&#10;END' />
            </column>
            <column caption='ST Nightly rent' datatype='real' name='[Calculation_4118190070884290562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_4118190071089545219] &gt; [ST -  $ 10th percentile rent]&#10;THEN [Calculation_4118190071089545219]&#10;ELSE [ST -  $ 10th percentile rent]&#10;END' />
            </column>
            <column caption='ST Optimal rent' datatype='real' name='[Calculation_4118190071089545219]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Parameters].[Parameter 1]*[Calculation_4118190071113396229])/[Calculation_4118190071111614468]-[Parameters].[Parameter 2])*[Calculation_4118190071113621510]' />
            </column>
            <column caption='Interim 1' datatype='real' name='[Calculation_4118190071111614468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])' />
            </column>
            <column caption='Interim 2' datatype='real' name='[Calculation_4118190071113396229]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ST -  $ 10th percentile rent] - ([$ 90th minus $ 10th]/8)' />
            </column>
            <column caption='Interim 3' datatype='real' name='[Calculation_4118190071113621510]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])/(2*[Parameters].[Parameter 1])' />
            </column>
            <column caption='ST Percentile rent' datatype='real' name='[Calculation_4118190071113969671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562]-[Calculation_4118190071113396229])/[Calculation_4118190071111614468]' />
            </column>
            <column caption='ST Correct forecast occupancy rate' datatype='real' name='[Calculation_4118190071114375176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]*[Calculation_4118190071113969671] + [Parameters].[Parameter 2]' />
            </column>
            <column caption='F_Forecast ST Annual Revenues Before Transaction Fees' datatype='real' name='[Calculation_4118190071114657801]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
            </column>
            <column caption='F_Forecast ST Annual Revenues After Transaction Fees' datatype='real' name='[Calculation_4118190071114944522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114657801]*(1 - [Parameters].[Parameter 3])' />
            </column>
            <column caption='F_Variable Cost (Conversion year and after)' datatype='real' name='[Calculation_4118190071526051852]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Parameter 5])*[Parameters].[Parameter 13]' />
            </column>
            <column caption='F_New Cash Out - each year thereafter' datatype='real' name='[Calculation_4118190071529611278]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Parameters].[Parameter 6] - ([Calculation_4118190071526051852]) - [Parameters].[Parameter 14]' />
            </column>
            <column caption='F_Change in Gross Rental Revenue' datatype='real' name='[Calculation_4118190074086834195]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114944522]-[LT Annual Revenue]' />
            </column>
            <column caption='V_Change in Gross Rental Revenue ' datatype='real' name='[Change in Gross Rental Revenue (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues After Transaction Fees (copy)]-[LT Annual Revenue]' />
            </column>
            <column caption='V_Profit or not ' datatype='integer' name='[F_Profit or not (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [V_Yearly Profit (Conversion Year)  (copy 2)] &gt;=[Parameters].[Parameter 10]&#10;THEN 1&#10;ELSE 0&#10;END' />
            </column>
            <column caption='V_Variable Cost - Conversion Year ' datatype='real' name='[F_Variable Cost - Conversion Year (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Average Length of Guest Stay (days) (copy)])*[Parameters].[Variable cost per guest (copy)]' />
            </column>
            <column caption='F_Yearly Profit All (Years after)  ' datatype='real' name='[F_Yearly Profit All (Conversion Year)   (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190074086834195]-([Parameters].[Parameter 8] /[Parameters].[Parameter 7]) - [Parameters].[Parameter 6] - ([Calculation_4118190071526051852]) - ([Parameters].[Parameter 14])' />
            </column>
            <column caption='F_Yearly Cashflow All (Years after)  ' datatype='real' name='[F_Yearly Profit All (Years after)   (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190074086834195]+[Calculation_4118190071529611278]' />
            </column>
            <column caption='V_Forecast ST Annual Revenues After Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues After Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues Before Transaction Fees (copy)]*(1 - [Parameters].[Transaction Fees (copy)])' />
            </column>
            <column caption='V_Forecast ST Annual Revenues Before Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues Before Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
            </column>
            <column datatype='real' name='[LT Annual Revenue]' role='measure' type='quantitative' />
            <column caption='V_New Cash Out - each year thereafter ' datatype='real' name='[New Cash Out - each year thereafter (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)]) - [Parameters].[Repair cost (copy)]' />
            </column>
            <column caption='ST 10th percentile rent' datatype='integer' name='[ST -  $ 10th percentile rent]' role='measure' type='quantitative' />
            <column caption='V_Yearly Profit All (Later years) ' datatype='real' name='[V_Yearly Profit (Conversion Year)  (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]-([Parameters].[Capital Expenditure (conversion year only) (copy 2)] /[Parameters].[Depreciation Period (years) (copy)]) - [Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)]) - ([Parameters].[Repair cost (copy)])' />
            </column>
            <column caption='V_Yearly Cashflow All (Later years)  ' datatype='real' name='[V_Yearly Profit All (Later years)  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)] + [New Cash Out - each year thereafter (copy)]' />
            </column>
            <column caption='Yearly cashflow (after, default) ' datatype='real' name='[Yearly profit (after, default)  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1289577671746412562] = 1&#10;THEN [F_Yearly Profit All (Years after)   (copy)]&#10;END' />
            </column>
            <column caption='Yearly cashflow (after, variable) ' datatype='real' name='[Yearly profit (after, variable)  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [F_Profit or not (copy)] = 1&#10;THEN [V_Yearly Profit All (Later years)  (copy)]&#10;END' />
            </column>
            <column-instance column='[Yearly profit (after, default)  (copy)]' derivation='Sum' name='[sum:Yearly profit (after, default)  (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly profit (after, variable)  (copy)]' derivation='Sum' name='[sum:Yearly profit (after, variable)  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (after, variable)  (copy):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (after, variable)  (copy):qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (after, default)  (copy):qk]' field-type='quantitative' major-origin='0.0' major-spacing='500000.0' max='1500000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (after, default)  (copy):qk]' scope='rows' value='' />
            <format attr='render-fold-reversed' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='78' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (after, default)  (copy):qk]' value='c&quot;$&quot;#,##0,,.0M;-&quot;$&quot;#,##0,,.0M' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2083977460861206' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='227' />
                <format attr='maxheight' value='227' />
                <format attr='minwidth' value='78' />
                <format attr='maxwidth' value='78' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (after, default)  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' />
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (after, variable)  (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (after, variable)  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (after, default)  (copy):qk] + [federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (after, variable)  (copy):qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{8BAFFA12-BF45-4CF0-8183-3514851E533E}' />
    </worksheet>
    <worksheet name='histogram'>
      <table>
        <view>
          <datasources>
            <datasource caption='4- Alternative to &quot;Solver&quot; (Alternative-to-Solver-Template-Spreadsheet-)' name='federated.08n46gj1x8tjcb163xkpu0u4h1jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='V_Average Length of Guest Stay (days) ' datatype='real' name='[Average Length of Guest Stay (days) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Capital Expenditure (conversion year only) ' datatype='real' name='[Capital Expenditure (conversion year only) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='20000.0'>
              <calculation class='tableau' formula='20000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Depreciation Period (years) ' datatype='real' name='[Depreciation Period (years) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Profitable Cutoff ' datatype='real' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
              <calculation class='tableau' formula='5000.0' />
              <desc>
                <formatted-text>
                  <run>if higher than this number then it&apos;s considered profitable</run>
                </formatted-text>
              </desc>
              <range min='1.0' />
            </column>
            <column caption='Beta' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-0.79139999999999999'>
              <calculation class='tableau' formula='-0.79139999999999999' />
            </column>
            <column caption='Alpha' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.85060000000000002'>
              <calculation class='tableau' formula='0.85060000000000002' />
            </column>
            <column caption='V_Repair cost ' datatype='real' name='[Repair cost (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Transaction Fees ' datatype='real' name='[Transaction Fees (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.20000000000000001'>
              <calculation class='tableau' formula='0.20000000000000001' />
              <range min='0.0' />
            </column>
            <column caption='V_Utility (every year) ' datatype='real' name='[Utility (every year) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3600.0'>
              <calculation class='tableau' formula='3600.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Variable cost per guest ' datatype='real' name='[Variable cost per guest (copy)]' param-domain-type='range' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
              <range min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08n46gj1x8tjcb163xkpu0u4h1jb'>
            <column caption='ST $ 90th minus $ 10th' datatype='integer' name='[$ 90th minus $ 10th]' role='measure' type='quantitative' />
            <column caption='ST Nightly rent' datatype='real' name='[Calculation_4118190070884290562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_4118190071089545219] &gt; [ST -  $ 10th percentile rent]&#10;THEN [Calculation_4118190071089545219]&#10;ELSE [ST -  $ 10th percentile rent]&#10;END' />
            </column>
            <column caption='ST Optimal rent' datatype='real' name='[Calculation_4118190071089545219]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Parameters].[Parameter 1]*[Calculation_4118190071113396229])/[Calculation_4118190071111614468]-[Parameters].[Parameter 2])*[Calculation_4118190071113621510]' />
            </column>
            <column caption='Interim 1' datatype='real' name='[Calculation_4118190071111614468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])' />
            </column>
            <column caption='Interim 2' datatype='real' name='[Calculation_4118190071113396229]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ST -  $ 10th percentile rent] - ([$ 90th minus $ 10th]/8)' />
            </column>
            <column caption='Interim 3' datatype='real' name='[Calculation_4118190071113621510]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])/(2*[Parameters].[Parameter 1])' />
            </column>
            <column caption='ST Percentile rent' datatype='real' name='[Calculation_4118190071113969671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562]-[Calculation_4118190071113396229])/[Calculation_4118190071111614468]' />
            </column>
            <column caption='ST Correct forecast occupancy rate' datatype='real' name='[Calculation_4118190071114375176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]*[Calculation_4118190071113969671] + [Parameters].[Parameter 2]' />
            </column>
            <column caption='V_Change in Gross Rental Revenue ' datatype='real' name='[Change in Gross Rental Revenue (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues After Transaction Fees (copy)]-[LT Annual Revenue]' />
            </column>
            <column caption='V_Profit or not ' datatype='integer' name='[F_Profit or not (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [V_Yearly Profit (Conversion Year)  (copy 2)] &gt;=[Parameters].[Parameter 10]&#10;THEN 1&#10;ELSE 0&#10;END' />
            </column>
            <column caption='V_Variable Cost - Conversion Year ' datatype='real' name='[F_Variable Cost - Conversion Year (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Average Length of Guest Stay (days) (copy)])*[Parameters].[Variable cost per guest (copy)]' />
            </column>
            <column caption='V_Forecast ST Annual Revenues After Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues After Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues Before Transaction Fees (copy)]*(1 - [Parameters].[Transaction Fees (copy)])' />
            </column>
            <column caption='V_Forecast ST Annual Revenues Before Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues Before Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
            </column>
            <column datatype='real' name='[LT Annual Revenue]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Number of Bedrooms (1 or 2)]' role='dimension' type='ordinal' />
            <column caption='ST 10th percentile rent' datatype='integer' name='[ST -  $ 10th percentile rent]' role='measure' type='quantitative' />
            <column caption='V_Yearly Profit All (Later years) ' datatype='real' name='[V_Yearly Profit (Conversion Year)  (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]-([Parameters].[Capital Expenditure (conversion year only) (copy 2)] /[Parameters].[Depreciation Period (years) (copy)]) - [Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)]) - ([Parameters].[Repair cost (copy)])' />
            </column>
            <column aggregation='None' datatype='integer' name='[Yearly profit (after, variable)  (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='4' formula='[Yearly profit (conversion, variable)  (copy)]' peg='0' size='10000' />
            </column>
            <column caption='Yearly profit (after, variable) ' datatype='real' name='[Yearly profit (conversion, variable)  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [F_Profit or not (copy)] = 1&#10;THEN [V_Yearly Profit (Conversion Year)  (copy 2)]&#10;END' />
            </column>
            <column-instance column='[Yearly profit (conversion, variable)  (copy)]' derivation='Count' name='[cnt:Yearly profit (conversion, variable)  (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly profit (after, variable)  (bin)]' derivation='None' name='[none:Yearly profit (after, variable)  (bin):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[property type (Apartment or House)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Yearly profit (after, variable)  (bin):qk]' included-values='non-null' />
          <slices>
            <column>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Yearly profit (after, variable)  (bin):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Yearly profit (after, variable)  (bin):qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[property type (Apartment or House) &amp; Number of Bedrooms (1 or 2) (Combined)]' value='Bedroom and Types'>
              <formatted-text>
                <run>Bedroom and Types</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[property type (Apartment or House) &amp; Number of Bedrooms (1 or 2) (Combined)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4942541122436523' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[cnt:Yearly profit (conversion, variable)  (copy):qk]</rows>
        <cols>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Yearly profit (after, variable)  (bin):qk]</cols>
        <show-full-range>
          <column>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Yearly profit (after, variable)  (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{34CF9E55-6131-49C0-96EB-FC5A8F0E7AF6}' />
    </worksheet>
    <worksheet name='yearly profit conversion'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='9'>Yearly Profits (Conversion Year)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='4- Alternative to &quot;Solver&quot; (Alternative-to-Solver-Template-Spreadsheet-)' name='federated.08n46gj1x8tjcb163xkpu0u4h1jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='V_Average Length of Guest Stay (days) ' datatype='real' name='[Average Length of Guest Stay (days) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Capital Expenditure (conversion year only) ' datatype='real' name='[Capital Expenditure (conversion year only) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='20000.0'>
              <calculation class='tableau' formula='20000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Depreciation Period (years) ' datatype='real' name='[Depreciation Period (years) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Profitable Cutoff ' datatype='real' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
              <calculation class='tableau' formula='5000.0' />
              <desc>
                <formatted-text>
                  <run>if higher than this number then it&apos;s considered profitable</run>
                </formatted-text>
              </desc>
              <range min='1.0' />
            </column>
            <column caption='F_Variable cost per guest (Hospitality)' datatype='real' name='[Parameter 13]' param-domain-type='any' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
            </column>
            <column caption='F_Repair cost' datatype='real' name='[Parameter 14]' param-domain-type='any' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
            </column>
            <column caption='Beta' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-0.79139999999999999'>
              <calculation class='tableau' formula='-0.79139999999999999' />
            </column>
            <column caption='Alpha' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.85060000000000002'>
              <calculation class='tableau' formula='0.85060000000000002' />
            </column>
            <column caption='F_Transaction Fees' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='0.29999999999999999'>
              <calculation class='tableau' formula='0.29999999999999999' />
            </column>
            <column caption='F_Average Length of Guest Stay (days)' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
            </column>
            <column caption='F_Utility (every year)' datatype='real' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='3600.0'>
              <calculation class='tableau' formula='3600.0' />
            </column>
            <column caption='F_Depreciation Period (years)' datatype='real' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
            <column caption='F_Capital Expenditure (conversion year only)' datatype='real' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='30000.0'>
              <calculation class='tableau' formula='30000.0' />
            </column>
            <column caption='F_Profitable Cutoff ' datatype='real' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
            </column>
            <column caption='V_Repair cost ' datatype='real' name='[Repair cost (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Transaction Fees ' datatype='real' name='[Transaction Fees (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.20000000000000001'>
              <calculation class='tableau' formula='0.20000000000000001' />
              <range min='0.0' />
            </column>
            <column caption='V_Utility (every year) ' datatype='real' name='[Utility (every year) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3600.0'>
              <calculation class='tableau' formula='3600.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Variable cost per guest ' datatype='real' name='[Variable cost per guest (copy)]' param-domain-type='range' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
              <range min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08n46gj1x8tjcb163xkpu0u4h1jb'>
            <column caption='ST $ 90th minus $ 10th' datatype='integer' name='[$ 90th minus $ 10th]' role='measure' type='quantitative' />
            <column caption='F_Profit or not' datatype='integer' name='[Calculation_1289577671746412562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [F_Yearly Profit All (Conversion Year)   (copy)]&gt;=[Parameters].[Parameter 9]&#10;THEN 1&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Yearly profit (conversion, default)' datatype='real' name='[Calculation_1289577671751909401]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1289577671746412562] = 1&#10;THEN [V_Yearly Profit (Conversion Year)  (copy)]&#10;END' />
            </column>
            <column caption='ST Nightly rent' datatype='real' name='[Calculation_4118190070884290562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_4118190071089545219] &gt; [ST -  $ 10th percentile rent]&#10;THEN [Calculation_4118190071089545219]&#10;ELSE [ST -  $ 10th percentile rent]&#10;END' />
            </column>
            <column caption='ST Optimal rent' datatype='real' name='[Calculation_4118190071089545219]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Parameters].[Parameter 1]*[Calculation_4118190071113396229])/[Calculation_4118190071111614468]-[Parameters].[Parameter 2])*[Calculation_4118190071113621510]' />
            </column>
            <column caption='Interim 1' datatype='real' name='[Calculation_4118190071111614468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])' />
            </column>
            <column caption='Interim 2' datatype='real' name='[Calculation_4118190071113396229]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ST -  $ 10th percentile rent] - ([$ 90th minus $ 10th]/8)' />
            </column>
            <column caption='Interim 3' datatype='real' name='[Calculation_4118190071113621510]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])/(2*[Parameters].[Parameter 1])' />
            </column>
            <column caption='ST Percentile rent' datatype='real' name='[Calculation_4118190071113969671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562]-[Calculation_4118190071113396229])/[Calculation_4118190071111614468]' />
            </column>
            <column caption='ST Correct forecast occupancy rate' datatype='real' name='[Calculation_4118190071114375176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]*[Calculation_4118190071113969671] + [Parameters].[Parameter 2]' />
            </column>
            <column caption='F_Forecast ST Annual Revenues Before Transaction Fees' datatype='real' name='[Calculation_4118190071114657801]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
            </column>
            <column caption='F_Forecast ST Annual Revenues After Transaction Fees' datatype='real' name='[Calculation_4118190071114944522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114657801]*(1 - [Parameters].[Parameter 3])' />
            </column>
            <column caption='F_Variable Cost (Conversion year and after)' datatype='real' name='[Calculation_4118190071526051852]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Parameter 5])*[Parameters].[Parameter 13]' />
            </column>
            <column caption='F_New Change in Profits, Conversion Year' datatype='real' name='[Calculation_4118190071529881615]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-([Parameters].[Parameter 8]/[Parameters].[Parameter 7]) - [Parameters].[Parameter 6] - ([Calculation_4118190071526051852])' />
            </column>
            <column caption='F_Change in Gross Rental Revenue' datatype='real' name='[Calculation_4118190074086834195]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114944522]-[LT Annual Revenue]' />
            </column>
            <column caption='V_Change in Gross Rental Revenue ' datatype='real' name='[Change in Gross Rental Revenue (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues After Transaction Fees (copy)]-[LT Annual Revenue]' />
            </column>
            <column caption='V_Profit or not ' datatype='integer' name='[F_Profit or not (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [V_Yearly Profit (Conversion Year)  (copy 2)] &gt;=[Parameters].[Parameter 10]&#10;THEN 1&#10;ELSE 0&#10;END' />
            </column>
            <column caption='V_Variable Cost - Conversion Year ' datatype='real' name='[F_Variable Cost - Conversion Year (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Average Length of Guest Stay (days) (copy)])*[Parameters].[Variable cost per guest (copy)]' />
            </column>
            <column caption='F_Yearly Profit All (Years after)  ' datatype='real' name='[F_Yearly Profit All (Conversion Year)   (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190074086834195]-([Parameters].[Parameter 8] /[Parameters].[Parameter 7]) - [Parameters].[Parameter 6] - ([Calculation_4118190071526051852]) - ([Parameters].[Parameter 14])' />
            </column>
            <column caption='V_Forecast ST Annual Revenues After Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues After Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues Before Transaction Fees (copy)]*(1 - [Parameters].[Transaction Fees (copy)])' />
            </column>
            <column caption='V_Forecast ST Annual Revenues Before Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues Before Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
            </column>
            <column datatype='real' name='[LT Annual Revenue]' role='measure' type='quantitative' />
            <column caption='V_New Change in Profits, Conversion Year ' datatype='real' name='[New Change in Profits, Conversion Year (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-([Parameters].[Capital Expenditure (conversion year only) (copy 2)]/[Parameters].[Depreciation Period (years) (copy)]) - [Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)])' />
            </column>
            <column caption='ST 10th percentile rent' datatype='integer' name='[ST -  $ 10th percentile rent]' role='measure' type='quantitative' />
            <column caption='V_Yearly Profit All (Later years) ' datatype='real' name='[V_Yearly Profit (Conversion Year)  (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]-([Parameters].[Capital Expenditure (conversion year only) (copy 2)] /[Parameters].[Depreciation Period (years) (copy)]) - [Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)]) - ([Parameters].[Repair cost (copy)])' />
            </column>
            <column caption='F_Yearly Profit All (Conversion Year)  ' datatype='real' name='[V_Yearly Profit (Conversion Year)  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190074086834195]+[Calculation_4118190071529881615]' />
            </column>
            <column caption='V_Yearly Profit All (Conversion Year) ' datatype='real' name='[Yearly Profit (Conversion Year) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]+[New Change in Profits, Conversion Year (copy)]' />
            </column>
            <column caption='Yearly profit (conversion, variable) ' datatype='real' name='[Yearly profit (conversion, default) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [F_Profit or not (copy)] = 1&#10;THEN [Yearly Profit (Conversion Year) (copy)]&#10;END' />
            </column>
            <column-instance column='[Calculation_1289577671751909401]' derivation='Sum' name='[sum:Calculation_1289577671751909401:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly profit (conversion, default) (copy)]' derivation='Sum' name='[sum:Yearly profit (conversion, default) (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy):qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Calculation_1289577671751909401:qk]' field-type='quantitative' major-origin='0.0' major-spacing='500000.0' max='1500000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='render-fold-reversed' value='true' />
            <format attr='title' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Calculation_1289577671751909401:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='59' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Calculation_1289577671751909401:qk]' value='c&quot;$&quot;#,##0,,.0M;-&quot;$&quot;#,##0,,.0M' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='226' />
                <format attr='maxheight' value='226' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Calculation_1289577671751909401:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1644198894500732' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Calculation_1289577671751909401:qk] + [federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy):qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{EC78F6BB-0493-4396-ACAF-B56BFAEA4A9C}' />
    </worksheet>
    <worksheet name='yearly profit each year after'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='9'>Yearly Profits (Year After)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='4- Alternative to &quot;Solver&quot; (Alternative-to-Solver-Template-Spreadsheet-)' name='federated.08n46gj1x8tjcb163xkpu0u4h1jb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='V_Average Length of Guest Stay (days) ' datatype='real' name='[Average Length of Guest Stay (days) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Capital Expenditure (conversion year only) ' datatype='real' name='[Capital Expenditure (conversion year only) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='20000.0'>
              <calculation class='tableau' formula='20000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Depreciation Period (years) ' datatype='real' name='[Depreciation Period (years) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Profitable Cutoff ' datatype='real' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
              <calculation class='tableau' formula='5000.0' />
              <desc>
                <formatted-text>
                  <run>if higher than this number then it&apos;s considered profitable</run>
                </formatted-text>
              </desc>
              <range min='1.0' />
            </column>
            <column caption='F_Variable cost per guest (Hospitality)' datatype='real' name='[Parameter 13]' param-domain-type='any' role='measure' type='quantitative' value='100.0'>
              <calculation class='tableau' formula='100.0' />
            </column>
            <column caption='F_Repair cost' datatype='real' name='[Parameter 14]' param-domain-type='any' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
            </column>
            <column caption='Beta' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='-0.79139999999999999'>
              <calculation class='tableau' formula='-0.79139999999999999' />
            </column>
            <column caption='Alpha' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.85060000000000002'>
              <calculation class='tableau' formula='0.85060000000000002' />
            </column>
            <column caption='F_Transaction Fees' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='0.29999999999999999'>
              <calculation class='tableau' formula='0.29999999999999999' />
            </column>
            <column caption='F_Average Length of Guest Stay (days)' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
            </column>
            <column caption='F_Utility (every year)' datatype='real' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='3600.0'>
              <calculation class='tableau' formula='3600.0' />
            </column>
            <column caption='F_Depreciation Period (years)' datatype='real' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
            <column caption='F_Capital Expenditure (conversion year only)' datatype='real' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='30000.0'>
              <calculation class='tableau' formula='30000.0' />
            </column>
            <column caption='F_Profitable Cutoff ' datatype='real' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
            </column>
            <column caption='V_Repair cost ' datatype='real' name='[Repair cost (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6000.0'>
              <calculation class='tableau' formula='6000.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Transaction Fees ' datatype='real' name='[Transaction Fees (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.20000000000000001'>
              <calculation class='tableau' formula='0.20000000000000001' />
              <range min='0.0' />
            </column>
            <column caption='V_Utility (every year) ' datatype='real' name='[Utility (every year) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3600.0'>
              <calculation class='tableau' formula='3600.0' />
              <range min='1.0' />
            </column>
            <column caption='V_Variable cost per guest ' datatype='real' name='[Variable cost per guest (copy)]' param-domain-type='range' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
              <range min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08n46gj1x8tjcb163xkpu0u4h1jb'>
            <column caption='ST $ 90th minus $ 10th' datatype='integer' name='[$ 90th minus $ 10th]' role='measure' type='quantitative' />
            <column caption='F_Profit or not' datatype='integer' name='[Calculation_1289577671746412562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [F_Yearly Profit All (Conversion Year)   (copy)]&gt;=[Parameters].[Parameter 9]&#10;THEN 1&#10;ELSE 0&#10;END' />
            </column>
            <column caption='ST Nightly rent' datatype='real' name='[Calculation_4118190070884290562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_4118190071089545219] &gt; [ST -  $ 10th percentile rent]&#10;THEN [Calculation_4118190071089545219]&#10;ELSE [ST -  $ 10th percentile rent]&#10;END' />
            </column>
            <column caption='ST Optimal rent' datatype='real' name='[Calculation_4118190071089545219]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Parameters].[Parameter 1]*[Calculation_4118190071113396229])/[Calculation_4118190071111614468]-[Parameters].[Parameter 2])*[Calculation_4118190071113621510]' />
            </column>
            <column caption='Interim 1' datatype='real' name='[Calculation_4118190071111614468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])' />
            </column>
            <column caption='Interim 2' datatype='real' name='[Calculation_4118190071113396229]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[ST -  $ 10th percentile rent] - ([$ 90th minus $ 10th]/8)' />
            </column>
            <column caption='Interim 3' datatype='real' name='[Calculation_4118190071113621510]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.25*([$ 90th minus $ 10th])/(2*[Parameters].[Parameter 1])' />
            </column>
            <column caption='ST Percentile rent' datatype='real' name='[Calculation_4118190071113969671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562]-[Calculation_4118190071113396229])/[Calculation_4118190071111614468]' />
            </column>
            <column caption='ST Correct forecast occupancy rate' datatype='real' name='[Calculation_4118190071114375176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]*[Calculation_4118190071113969671] + [Parameters].[Parameter 2]' />
            </column>
            <column caption='F_Forecast ST Annual Revenues Before Transaction Fees' datatype='real' name='[Calculation_4118190071114657801]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
            </column>
            <column caption='F_Forecast ST Annual Revenues After Transaction Fees' datatype='real' name='[Calculation_4118190071114944522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114657801]*(1 - [Parameters].[Parameter 3])' />
            </column>
            <column caption='F_Variable Cost (Conversion year and after)' datatype='real' name='[Calculation_4118190071526051852]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Parameter 5])*[Parameters].[Parameter 13]' />
            </column>
            <column caption='F_Change in Gross Rental Revenue' datatype='real' name='[Calculation_4118190074086834195]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114944522]-[LT Annual Revenue]' />
            </column>
            <column caption='V_Change in Gross Rental Revenue ' datatype='real' name='[Change in Gross Rental Revenue (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues After Transaction Fees (copy)]-[LT Annual Revenue]' />
            </column>
            <column caption='V_Profit or not ' datatype='integer' name='[F_Profit or not (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [V_Yearly Profit (Conversion Year)  (copy 2)] &gt;=[Parameters].[Parameter 10]&#10;THEN 1&#10;ELSE 0&#10;END' />
            </column>
            <column caption='V_Variable Cost - Conversion Year ' datatype='real' name='[F_Variable Cost - Conversion Year (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190071114375176]*(365/[Parameters].[Average Length of Guest Stay (days) (copy)])*[Parameters].[Variable cost per guest (copy)]' />
            </column>
            <column caption='F_Yearly Profit All (Years after)  ' datatype='real' name='[F_Yearly Profit All (Conversion Year)   (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4118190074086834195]-([Parameters].[Parameter 8] /[Parameters].[Parameter 7]) - [Parameters].[Parameter 6] - ([Calculation_4118190071526051852]) - ([Parameters].[Parameter 14])' />
            </column>
            <column caption='V_Forecast ST Annual Revenues After Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues After Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Forecast ST Annual Revenues Before Transaction Fees (copy)]*(1 - [Parameters].[Transaction Fees (copy)])' />
            </column>
            <column caption='V_Forecast ST Annual Revenues Before Transaction Fees ' datatype='real' name='[Forecast ST Annual Revenues Before Transaction Fees (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_4118190070884290562])*([Calculation_4118190071114375176])*365' />
            </column>
            <column datatype='real' name='[LT Annual Revenue]' role='measure' type='quantitative' />
            <column caption='ST 10th percentile rent' datatype='integer' name='[ST -  $ 10th percentile rent]' role='measure' type='quantitative' />
            <column caption='V_Yearly Profit All (Later years) ' datatype='real' name='[V_Yearly Profit (Conversion Year)  (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Change in Gross Rental Revenue (copy)]-([Parameters].[Capital Expenditure (conversion year only) (copy 2)] /[Parameters].[Depreciation Period (years) (copy)]) - [Parameters].[Utility (every year) (copy)] - ([F_Variable Cost - Conversion Year (copy)]) - ([Parameters].[Repair cost (copy)])' />
            </column>
            <column caption='Yearly profit (after, default) ' datatype='real' name='[Yearly profit (conversion, default) (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1289577671746412562] = 1&#10;THEN [F_Yearly Profit All (Conversion Year)   (copy)]&#10;END' />
            </column>
            <column caption='Yearly profit (after, variable) ' datatype='real' name='[Yearly profit (conversion, variable)  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [F_Profit or not (copy)] = 1&#10;THEN [V_Yearly Profit (Conversion Year)  (copy 2)]&#10;END' />
            </column>
            <column-instance column='[Yearly profit (conversion, default) (copy 2)]' derivation='Sum' name='[sum:Yearly profit (conversion, default) (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yearly profit (conversion, variable)  (copy)]' derivation='Sum' name='[sum:Yearly profit (conversion, variable)  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy):qk]' scope='rows' value='false' />
            <format attr='render-fold-reversed' value='true' />
            <format attr='title' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy 2):qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy 2):qk]' field-type='quantitative' major-origin='0.0' major-spacing='500000.0' max='1500000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='78' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy 2):qk]' value='c&quot;$&quot;#,##0,,.0M;-&quot;$&quot;#,##0,,.0M' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='251' />
                <format attr='maxheight' value='251' />
                <format attr='minwidth' value='78' />
                <format attr='maxwidth' value='78' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy 2):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' />
              <lod column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, default) (copy 2):qk] + [federated.08n46gj1x8tjcb163xkpu0u4h1jb].[sum:Yearly profit (conversion, variable)  (copy):qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{3595760D-78E5-4155-BCA8-B9315EBBF1D6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='final dashboard'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='V_Average Length of Guest Stay (days) ' datatype='real' name='[Average Length of Guest Stay (days) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
          <range min='1.0' />
        </column>
        <column caption='V_Capital Expenditure (conversion year only) ' datatype='real' name='[Capital Expenditure (conversion year only) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='20000.0'>
          <calculation class='tableau' formula='20000.0' />
          <range min='1.0' />
        </column>
        <column caption='V_Depreciation Period (years) ' datatype='real' name='[Depreciation Period (years) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
          <range min='1.0' />
        </column>
        <column caption='V_Profitable Cutoff ' datatype='real' name='[Parameter 10]' param-domain-type='range' role='measure' type='quantitative' value='5000.0'>
          <calculation class='tableau' formula='5000.0' />
          <desc>
            <formatted-text>
              <run>if higher than this number then it&apos;s considered profitable</run>
            </formatted-text>
          </desc>
          <range min='1.0' />
        </column>
        <column caption='V_Repair cost ' datatype='real' name='[Repair cost (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6000.0'>
          <calculation class='tableau' formula='6000.0' />
          <range min='1.0' />
        </column>
        <column caption='V_Transaction Fees ' datatype='real' name='[Transaction Fees (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.20000000000000001'>
          <calculation class='tableau' formula='0.20000000000000001' />
          <range min='0.0' />
        </column>
        <column caption='V_Utility (every year) ' datatype='real' name='[Utility (every year) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3600.0'>
          <calculation class='tableau' formula='3600.0' />
          <range min='1.0' />
        </column>
        <column caption='V_Variable cost per guest ' datatype='real' name='[Variable cost per guest (copy)]' param-domain-type='range' role='measure' type='quantitative' value='200.0'>
          <calculation class='tableau' formula='200.0' />
          <range min='1.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='72' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='75' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='73' type='layout-basic' w='98400' x='800' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='33625' id='3' name='yearly profit each year after' w='15600' x='15600' y='6375' />
        <zone h='33750' id='6' name='cash flow conversion' w='15600' x='31600' y='6375' />
        <zone h='33750' id='7' name='cash flow year after' w='16900' x='45600' y='6375' />
        <zone h='33375' id='39' name='yearly profit conversion' w='13600' x='1700' y='6500' />
        <zone forceUpdate='true' h='5500' id='40' type='text' w='56100' x='5600' y='1500'>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Tableau Bold' fontsize='12'>Total Cash Flow and Profits </run>
            <run bold='true' fontcolor='#000000' fontsize='12'>from Converting all Profitable Properties</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' h='7500' id='41' mode='type_in' param='[Parameters].[Transaction Fees (copy)]' type='paramctrl' w='13900' x='61900' y='12125'>
          <formatted-text>
            <run>Transaction Fees </run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='5500' id='42' mode='type_in' param='[Parameters].[Repair cost (copy)]' type='paramctrl' w='16000' x='78000' y='12125'>
          <formatted-text>
            <run>Repair cost </run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='7375' id='43' mode='type_in' param='[Parameters].[Depreciation Period (years) (copy)]' type='paramctrl' w='13700' x='62000' y='19625'>
          <formatted-text>
            <run>Depreciation Period &#10;</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='5500' id='44' mode='type_in' param='[Parameters].[Capital Expenditure (conversion year only) (copy 2)]' type='paramctrl' w='16000' x='78100' y='19750'>
          <formatted-text>
            <run>Capital Expenditure </run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='7875' id='45' mode='type_in' param='[Parameters].[Utility (every year) (copy)]' type='paramctrl' w='13900' x='62100' y='27000'>
          <formatted-text>
            <run>Yearly Utility </run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='5500' id='46' mode='type_in' param='[Parameters].[Parameter 10]' type='paramctrl' w='16000' x='78200' y='27250'>
          <formatted-text>
            <run>Profitable Cutoff </run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='7500' id='47' mode='type_in' param='[Parameters].[Variable cost per guest (copy)]' type='paramctrl' w='13800' x='62100' y='34750'>
          <formatted-text>
            <run>Variable cost per guest </run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='5500' id='48' mode='type_in' param='[Parameters].[Average Length of Guest Stay (days) (copy)]' type='paramctrl' w='16000' x='78200' y='34750'>
          <formatted-text>
            <run>Average Days Guest Stay </run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='8500' id='49' type='text' w='32000' x='62200' y='1875'>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Tableau Bold' fontsize='14'>Change these assumptions</run>
            <run>Æ </run>
            <run bold='true' fontcolor='#000000' fontsize='11'>to see how they influence expected cash flow and profits from short term rental</run>
          </formatted-text>
        </zone>
        <zone h='7250' id='50' name='yearly profit conversion' pane-specification-id='10' param='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' type='color' w='22300' x='3800' y='42500' />
        <zone h='13875' id='51' name='Sheet 11' w='38300' x='3500' y='51250' />
        <zone h='33375' id='53' name='histogram' show-title='false' w='38200' x='3800' y='64250' />
        <zone h='12250' id='54' name='histogram' pane-specification-id='0' param='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[property type (Apartment or House) &amp; Number of Bedrooms (1 or 2) (Combined)]' type='color' w='14000' x='27700' y='64375' />
        <zone h='9875' id='55' name='Sheet 10' show-title='false' w='25400' x='53400' y='43250' />
        <zone forceUpdate='true' h='6500' id='56' type='text' w='27200' x='68900' y='42250'>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Trebuchet MS' fontsize='10'>Hover over the circle to see the original</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#59a14f' fontname='Trebuchet MS' fontsize='10'>parameters used in the model.</run>
          </formatted-text>
        </zone>
        <zone h='38000' id='67' name='Sheet 13' show-title='false' w='50700' x='43800' y='58500' />
        <zone forceUpdate='true' h='4000' id='71' type='text' w='31200' x='55400' y='51750'>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Tableau Bold' fontsize='14'>Location</run>
            <run bold='true'>Æ </run>
            <run bold='true' fontcolor='#000000' fontsize='12'>of Profitable Properties</run>
          </formatted-text>
        </zone>
        <zone h='11250' id='76' name='Sheet 14' show-title='false' w='15700' x='43900' y='91125' />
        <zone forceUpdate='true' h='6250' id='78' type='text' w='21300' x='44000' y='84875'>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontsize='12'>Top 2</run>
            <run bold='true' fontsize='12'>Æ </run>
            <run bold='true' fontcolor='#000000' fontsize='10'>most profitable</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#000000' fontsize='10'>properties ranked by city</run>
          </formatted-text>
        </zone>
        <zone h='4500' id='79' name='Sheet 15' w='35900' x='28100' y='43375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2850' minheight='2850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='82' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='83' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='5500' id='40' type='text' w='56100' x='5600' y='1500'>
                  <formatted-text>
                    <run bold='true' fontcolor='#59a14f' fontname='Tableau Bold' fontsize='12'>Total Cash Flow and Profits </run>
                    <run bold='true' fontcolor='#000000' fontsize='12'>from Converting all Profitable Properties</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8500' id='49' type='text' w='32000' x='62200' y='1875'>
                  <formatted-text>
                    <run bold='true' fontcolor='#59a14f' fontname='Tableau Bold' fontsize='14'>Change these assumptions</run>
                    <run>Æ </run>
                    <run bold='true' fontcolor='#000000' fontsize='11'>to see how they influence expected cash flow and profits from short term rental</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='33625' id='3' is-fixed='true' name='yearly profit each year after' w='15600' x='15600' y='6375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='33750' id='6' is-fixed='true' name='cash flow conversion' w='15600' x='31600' y='6375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='33750' id='7' is-fixed='true' name='cash flow year after' w='16900' x='45600' y='6375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='267' h='33375' id='39' is-fixed='true' name='yearly profit conversion' w='13600' x='1700' y='6500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='50' name='yearly profit conversion' pane-specification-id='10' param='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' type='color' w='22300' x='3800' y='42500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='7500' id='41' mode='type_in' param='[Parameters].[Transaction Fees (copy)]' type='paramctrl' w='13900' x='61900' y='12125'>
                  <formatted-text>
                    <run>Transaction Fees </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='5500' id='42' mode='type_in' param='[Parameters].[Repair cost (copy)]' type='paramctrl' w='16000' x='78000' y='12125'>
                  <formatted-text>
                    <run>Repair cost </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='7375' id='43' mode='type_in' param='[Parameters].[Depreciation Period (years) (copy)]' type='paramctrl' w='13700' x='62000' y='19625'>
                  <formatted-text>
                    <run>Depreciation Period &#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='5500' id='44' mode='type_in' param='[Parameters].[Capital Expenditure (conversion year only) (copy 2)]' type='paramctrl' w='16000' x='78100' y='19750'>
                  <formatted-text>
                    <run>Capital Expenditure </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='7875' id='45' mode='type_in' param='[Parameters].[Utility (every year) (copy)]' type='paramctrl' w='13900' x='62100' y='27000'>
                  <formatted-text>
                    <run>Yearly Utility </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='5500' id='46' mode='type_in' param='[Parameters].[Parameter 10]' type='paramctrl' w='16000' x='78200' y='27250'>
                  <formatted-text>
                    <run>Profitable Cutoff </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='7500' id='47' mode='type_in' param='[Parameters].[Variable cost per guest (copy)]' type='paramctrl' w='13800' x='62100' y='34750'>
                  <formatted-text>
                    <run>Variable cost per guest </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='5500' id='48' mode='type_in' param='[Parameters].[Average Length of Guest Stay (days) (copy)]' type='paramctrl' w='16000' x='78200' y='34750'>
                  <formatted-text>
                    <run>Average Days Guest Stay </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6500' id='56' type='text' w='27200' x='68900' y='42250'>
                  <formatted-text>
                    <run bold='true' fontcolor='#59a14f' fontname='Trebuchet MS' fontsize='10'>Hover over the circle to see the original</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#59a14f' fontname='Trebuchet MS' fontsize='10'>parameters used in the model.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='79' h='9875' id='55' is-fixed='true' name='Sheet 10' show-title='false' w='25400' x='53400' y='43250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='36' h='4500' id='79' is-fixed='true' name='Sheet 15' w='35900' x='28100' y='43375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='111' h='13875' id='51' is-fixed='true' name='Sheet 11' w='38300' x='3500' y='51250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4000' id='71' type='text' w='31200' x='55400' y='51750'>
                  <formatted-text>
                    <run bold='true' fontcolor='#59a14f' fontname='Tableau Bold' fontsize='14'>Location</run>
                    <run bold='true'>Æ </run>
                    <run bold='true' fontcolor='#000000' fontsize='12'>of Profitable Properties</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38000' id='67' is-fixed='true' name='Sheet 13' show-title='false' w='50700' x='43800' y='58500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='267' h='33375' id='53' is-fixed='true' name='histogram' show-title='false' w='38200' x='3800' y='64250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12250' id='54' name='histogram' pane-specification-id='0' param='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[property type (Apartment or House) &amp; Number of Bedrooms (1 or 2) (Combined)]' type='color' w='14000' x='27700' y='64375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6250' id='78' type='text' w='21300' x='44000' y='84875'>
                  <formatted-text>
                    <run bold='true' fontcolor='#59a14f' fontsize='12'>Top 2</run>
                    <run bold='true' fontsize='12'>Æ </run>
                    <run bold='true' fontcolor='#000000' fontsize='10'>most profitable</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000' fontsize='10'>properties ranked by city</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='90' h='11250' id='76' is-fixed='true' name='Sheet 14' show-title='false' w='15700' x='43900' y='91125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0D20FA5B-4671-40FA-8260-3DD52E7C3294}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='yearly profit each year after'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EC0AC81E-F902-4389-9E25-82761568A946}' />
    </window>
    <window class='worksheet' name='yearly profit conversion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='10' param='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{290C8CC9-2633-493D-9562-BB330497AFFE}' />
    </window>
    <window class='worksheet' name='cash flow conversion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1AF9A614-C357-4627-A98A-BCFBC4CF839B}' />
    </window>
    <window class='worksheet' name='cash flow year after'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='10' param='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 10]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E2E49B06-1F48-447C-88B4-380C39AF765E}' />
    </window>
    <window class='worksheet' name='histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[property type (Apartment or House) &amp; Number of Bedrooms (1 or 2) (Combined)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[property type (Apartment or House) &amp; Number of Bedrooms (1 or 2) (Combined)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DEDF6F1F-E8D7-4DD4-9455-23FEAA18BE12}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Bedroom and Types (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Watershed ID:nk]</field>
            <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Yearly profit (after, variable)  (bin):qk]</field>
            <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:property type (Apartment or House):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{999DC588-6C11-4D30-BB72-0D40992E5EF8}' />
    </window>
    <window class='dashboard' maximized='true' name='final dashboard'>
      <viewpoints>
        <viewpoint name='Sheet 10'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 11'>
          <highlight field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Bedroom and Types (group)]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 13'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Sheet 14' />
        <viewpoint name='Sheet 15'>
          <zoom type='fit-width' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[usr:Calculation_3333086002874769412:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>920000.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='cash flow conversion'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='cash flow year after'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='histogram'>
          <zoom type='entire-view' />
          <highlight field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[property type (Apartment or House) &amp; Number of Bedrooms (1 or 2) (Combined)]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='yearly profit conversion'>
          <zoom type='entire-view' />
          <highlight field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='yearly profit each year after'>
          <zoom type='fit-height' />
          <highlight field='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='73' />
      <simple-id uuid='{09CBC6F5-217E-4A74-8199-1A5F4F12EF05}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[cnt:Watershed ID:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[cnt:Watershed ID:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>244</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{B219885A-CDEC-4494-BFDA-F4E41A02CAEC}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Number of Bedrooms (1 or 2) &amp; property type (Apartment or House) (Combined)]' type='color' />
            <card param='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Bedroom and Types (group)]</field>
            <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[Number of Bedrooms (1 or 2) &amp; property type (Apartment or House) (Combined)]</field>
            <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Latitude (generated):qk]</field>
            <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Longitude (generated):qk]</field>
            <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:Watershed ID:nk]</field>
            <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]</field>
            <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:zipcode (map_full.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90183750-DBC8-4781-A0FC-7A96CFA42723}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08n46gj1x8tjcb163xkpu0u4h1jb].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD28A294-6D82-4170-B521-2ABE449ACBF0}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D817A0CA-4A70-41F6-8333-8C75EB1542AC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 10' width='128'>
      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
      5eW4dOnSpJd7DQOL1q3FQl90Jo680fglvrt4/4kjq6urY7KT50HM+gCA0aljDx8+jH379j3Y
      1LFLn8D89HTMX5gGr2Egfu7cyK90w0ODGB4cxFB/PwZu9GCguxt9XV8/0NSxe/bswc6dO2fU
      1LF0k0dXVFTEfPLoioqKGTt5NFUAd92dPj4/P9+2DV9QUGAeOnRoxk8fT/EUMBXTNBEIBHD8
      +HHU1dWhsbFx2sfk9Xg88Pl8KC0txdatW1FYWGjb9/iiiTqAewWDQdTX16O5uRktLS1obW1F
      KBRCf39/5OgcycnJMAwDqampyM7ORk5ODnJzc1FSUuLKXzArAHKu/zBIHo4CIKcAyCkAcgqA
      nAIgpwDIKQByCoCcAiCnAMgpAHIKgJwCIKcAyCkAcgqAnAIgpwDIKQByCoCcAiCnAMgpAHIK
      gJwCIKcAyCkAcgqAnAIgpwDIKQByCoCcAiCnAMgpAHIKgJwCIKcAyCkAcgqAnAIgpwDIKQBy
      CoCcAiCnAMgpAHIKgJwCIKcAyCkAcgqAnAIgpwDIKQByCoCcAiCnAMgpAHIKgJwCIKcAyCkA
      cgqAnAIgpwDIKQByCoCcAiCnAMgpAHIKgJwCIKcAyCkAcgqAnAIgpwDIKQByCoCcAiCnAMgp
      AHIKgJwCIKcAyCkAcgqAnAIgpwDIKQByCoCcAiCnAMgpAHIKgJwCIKcAyCkAcgqAnAIgpwDI
      KQByCoCcAiCnAMgpAHIKgJwCIKcAyCkAcgqAnAIgpwDIKQByCoCcAiCnAMgpAHIKgJwCIKcA
      yCkAcgqAnAIgpwDIKQByCoCcAiCnAMgpAHIKgJwCIKcAyCkAcgqAnAIgpwDIKQByCoCcAiCn
      AMgpAHIKgJwCIKcAyCkAcgqAnAIgpwDIKQByCoCcAiCnAMgpAHIKgJwCIKcAyCkAcgqAnAIg
      pwDIKQByCoCcAiCnAMgpAHIKgJwCIKcAyCkAcgqAnAIgpwDIKQByCoCcAiCnAMgpAHIKgJwC
      IKcAyCkAcgqAnAIgpwDIKQByCoCcAiCnAMgpAHIKgJwCIKcAyCkAcgqAnAIgpwDIKQByCoCc
      AiCnAMgpAHIKgJwCIKcAyCkAcgqAnAIgpwDIKQByCoCcAiCnAMgpAHIKgJwCIKcAyCkAcgqA
      nAIgpwDIKQByCoCcAiCnAMgpAHIKgJwCIKcAyCkAcgqAnAIgpwDI/R8LZrcN4kmKkgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='70' name='Sheet 11' width='384'>
      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
      cAIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 13' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOx9248kyVX+iays+21mbK+967WxjEA8IIGEAMlC8IYQMv8A/yaIy09GSCB4
      QgIkBAjzANZ6rZXXO133e+Xvofiivzx1IjKyqnqmu6c/aTRdVZFxy4hzjxNuOp0WzWZTXvDu
      sd/vZbVanX3vnBMRkaIopCiK0ne6HH5H+WazKd1uV0REttutbDabi/sXahvf93o9Wa/Xpe9E
      RDabjbTb7VI/+/2+OOeCY9bjQvkUXDtORrvdllar5T9b/XXOSbvdlrr7Zr1ey263Sy6v5+F4
      PMp2u43WwWtHI8sy6fV6st1uZb/fS6fTkcPhIK1WS/b7vazX6+Q1V/cdPXcURSH7/d6/o4ds
      B6gz97vdThqNhmRZJiIieZ7LmzdvXN5sNqXT6dy8oy+IoygKOR6P0mg0gr8Dzjn/j39nBoDP
      g8HAEyYQqeVyKVmWSVEUcjgcJMsy/2xRFH5RhNrn/jrnpNFoiHNOjsdj8Fk9rlarJY1GQ9br
      dXDMjEajUSLEMaBu1H88HpOew5wBWZbJYDAojWm73Z5t6GazKYPBoNYGLIribOy6fU148zz3
      zBzzn2VZcHzWmmH0+33J81xWq5U452S328nxeJR2uy3b7bZUPrbmeB2kvqPnjqIoZLfb+T0W
      KmMJU6nrSO/JOutvu91KlmV+7wN5cg0vuCkgcVnAZhexN7Le6FmWeWKf5/lZPZamgHotSRGM
      QRNHfMb/+/2+RLRiixnMzmIYFjabTTJxybJM+v2+77ulYVh9YybonJPD4eAZZAytVusiyddq
      P/S5KIrS+LfbrSwWC8nzXPI8l/1+H2wn9B5arVZJU8Ia2263cjweS++yas2F1s6His1mI5vN
      xgtflhZlCWx1cI22pfcukLYbX3BzWFKcVr/1P0B/bjQa0u12S8T/cDjIZDI5M41ACuDPFrgv
      3G6on8fjsTQmMB+UQz/yPE9mApeg0+nIq1evzM1ijUn/pqU3nlPgEqnXOecZh0VgQ88AmFtI
      mdYchtYL16GFDhYG8A/MPrTm8P/hcJDtdhud1w8FrOEyUtbcQ6Jqrb0wgPeAmJooUn5pKYtE
      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
    </thumbnail>
    <thumbnail height='96' name='Sheet 14' width='288'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='48' name='Sheet 15' width='128'>
      iVBORw0KGgoAAAANSUhEUgAAAIAAAAAwCAYAAADZ9HK+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAE6UlEQVR4nO2cX0hTbxyHn50NLf9MIRYkKiLZhYQih+kiQdMM6U6Q9EavvIi69Wa3Cgoi
      RASJBIEXSXSRBM6LFFfkDNf8g1AXEWO6GNZFfzY6c3N6upAdHUtb8Jv+4H0fOBd73/e8e9ke
      Pt/znjNm0nVdRyIsymkvQHK6SAEERwogOFIAwZECCI4UQHCkAIIjBRAcKYDgSAEERwogOFIA
      wZECCI4UQHCkAIIjBRAcKYDgSAEERwogOFIAwZECCI4UQHCkAIIjBRAcKYDgWE57ASIxMjLC
      27dvAbh+/Tp37949cmwikcDhcADg8/mytiaZACdELBZjenqaYDBIMBjkxYsX7O3tnfaypAAn
      hcfjQdM0ioqKyMnJ4du3bywvL5/2sqQAJ8Xc3BwA7e3tXL16FYDZ2dnTXBIgBTgRtre3efPm
      DbBf+1tbWwF49epVxmXg/fv3eDwe/H7/P5WOUCjE5uYm8Xj8j/3yIvAE8Hg8RKNRzp07R21t
      LdFo1CgDPp+P+vr6Y89/9OgR4+PjxuuzZ8/S19dHb28vJpMpbfzXr18ZHR3F5/MRDocBMJlM
      1NXV0dvbS2NjozFWJsAJkIz/lpYWFEUhPz/fuMJP9h3H+Pg4ly5doqamhry8PKLRKA8ePGB4
      eDht7OrqKt3d3czPzxMOh7FarZw/fx6AlZUVnj17ljJeCpBlDsd/MvphvxQAuN3uv0Z6fX09
      k5OTPH78mJmZGa5duwbA1NQUnz59MsbF43EGBgYIh8PYbDYePnzI/Pw8MzMzuFwuurq6DPEM
      dElWmZ2d1VVV1dva2vTd3V2jPRKJ6A6HQ1dVVV9aWko7b2dnR1dVVVdVNa0vkUjoHR0duqqq
      +uDgoNE+OTmpq6qqX7lyRQ8GgxmtTyZAlkle6Tc3N6MoBx93QUGBUfv/dTdgNpvp6ekBIBAI
      GO1ra2sA3Lp1i9LS0ozmkgJkkWg0isfjAQ4i/zDJkuB2u9nd3f2nuauqqgAIBoNGm9/vB8Bu
      t2c8j9wFZJGFhQW2t7cB6O/vx2w2p/RHIhEAfvz4wbt379Lr8zHk5eUBkJuba7R9+fIFgMLC
      woznkQmQRQ5Hu6ZpRCKRlOMwmewGDvP582fgQAQAm81mvFemyATIEpqmGfE/Ojp6ZCy7XC5G
      RkZwu904nc60lDiK5G3kyspKo62yspKNjQ3W19czThOZAFliYWGBWCyG1WqlsbGR/Pz8Px43
      btzAbDbz8+dPvF5vRnNvbGwY+/nLly8b7dXV1QA8efKE79+/ZzSXFCBLJCO9qakJi+XooC0u
      LkZVVeDo3cDhcuH1erlz5w47OzuUlZXR2dlp9HV1dWGz2fj16xe3b982LgphP5EmJiaYmppK
      mduk6/KfQv9rNE2jra2NWCzG/fv3jYc/R/H8+XOGhoawWq28fPkSi8WS8nsAs9lMQ0MDgUCA
      UCgE7Nf+e/fuGfIkef36NU6nk3g8jqIoVFRUcObMGQKBAJqmYbfbGRsbM8bLBMgCm5ubxGIx
      CgsL/3qfHw7uEYTDYba2tlL6ysvLURSFxcVFQqEQiqLgcDh4+vRp2pcP+4kzMTFBdXU1uq7j
      9/v58OEDmqZRWlrKzZs3U8bLBPgfk7yXr2ka6+vrWK1WLl68SE5OTkbna5rGx48fSSQSlJSU
      cOHChbSHR1IAwZElQHCkAILzG7QkneC6zKhxAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='cash flow conversion' width='312'>
      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
      uYYYFxen1atXh+RnAcKFwM2Q2+1WVlaWzp07J6/Xq4MHDzqflZaWOn+Ojo7WCy+8MGbFsaKi
      QocPHx5zvJtngS+//PKYFdfNmzdrx44dkkZPMS9evChpNHaBwMXFxSkpKUkdHR0qLS1VaWmp
      5s2bp5SUFHV3d+vatWuSRu9x271797RXQBMSEpSdne3MRNevX6/IyMhp7QvMFgI3Q263WyUl
      JfJ6vTp+/LhaWlrU1tamvr4+RUVFKTU1Vbm5uSoqKhr320RcLteY3x/3Q319fWNe3/yrjeLj
      4xURETHutDgxMVGvvfaavvrqKx09elRXr17V9evXdenSJWebjIwMPf3000F/DVJgjMF+88mG
      DRucwAW7uTfYPsBs4h9+DoPe3l6VlJRo586d2rp166yOZXBwUG1tbero6FB8fLxSU1O5bw0/
      GczgjIuOjtby5cvDvrgBzEWsogIwi8CFgcvl0tKlS50L/wBmB9fgAJjFDA6AWQQOgFkEDoBZ
      BA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQO
      gFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZ
      BA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQO
      gFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZ
      BA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQO
      gFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZ
      BA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQO
      gFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZ
      BA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBC7EBgcHZ3sIAP6DwIWQ3+9XcXGxKioqZnsoAETg
      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
      JSUl2rlzp7Zu3TqrYxkZGVFLS4uuXbsml8uln/3sZ4qLi5vVMQE/NmZwRrlcLqWnpys9PX22
      hwLMGlZRAZhF4ELI5XJp6dKlYy78A5g9XIMDYBYzOABmETgAZhE4AGYROABmETgAZhE4AGYR
      OABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgA
      ZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYR
      OABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgA
      ZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYR
      OABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgA
      ZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYR
      OABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgA
      ZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYR
      OABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgAZhE4AGYROABmETgA
      ZhE4AGYROABmETgAZhE4AGYROABmETgAZhG4EBscHJztIQD4DwIXQn6/X8XFxaqoqJjtoQAQ
      gQuLb7/99pb3GRkZ0cDAQBhGA/x0Rc32ACwYGBjQmTNn1NraKkmqr6+X2+3WsmXLlJOTI5dr
      4r9Hjh07psrKSl28eFE3btxQWlqasrKytG3bNsXFxd3yWL7++mtVVVVNuk1ycrIee+wxRURE
      OO99/vnn8nq9kqTY2Fjt2rVryu/q6+vToUOHnNdFRUVasWLFLY8ZCBcCN0MnTpzQe++9p97e
      Xue9lpYWtbS0SJIWLlyoXbt2ac2aNeP2/fvf/65PP/10zHuXL1/W5cuXde7cOb300ktKTEy8
      pfHU1NTo5MmTU2734IMPav78+c7rxsZG1dbWOq83btyojIyMSY9RXV095rtiY2MJHOYUAjcD
      tbW12r9/v/x+v6Kjo5WTk6Oamhp5PB4tXrxYtbW16urqUmtr67jAnThxwolbXl6eHnvsMS1c
      uFBVVVV69913dfnyZf3lL3/R73//+1saU+D0ePPmzcrMzJxwu5iYmEmPU1lZOWXgTp8+LUmK
      jIzU8PDwLY0T+DEQuBkoKyuT3+9XVlaWiouLFRMTo+eff165ubl6/PHH1d7erk8++UQJCQnj
      9j169KgkadWqVfrVr36lqKjR/xVbtmyR2+3W3/72N128eFHNzc1KT0+f9piuXLkiSSosLNTK
      lStv+Wdau3atqqurdfr0aT355JNjTmNv1tPTo8bGRknSmjVrVF1dfcvfBYQbiwwzcOHCBUnS
      9u3bFRsbO+7zJUuWaPfu3dq8efOY9y9evOhcr9u5c6cTt4B7773XOdX78ssvpz2evr4+51Q5
      NTV1+j/ITe666y653W75fD4nYMFUVVVpZGREaWlp8ng8t/VdQLgRuBkIzG5udfXz7NmzkqSl
      S5dq+fLlQbe59957JWnSyPxQ4PR0wYIFt7VAIUlRUVFau3atpNHT1IkETk8LCgomnOUBs43A
      zcCyZcskSe+8847a29unvZ/P55MkrV69esJtcnNzx2w7HYHT07S0tGnvE8yGDRskjc7ShoaG
      xn3e1dWl8+fPSxoNHDBXcQ1uBrZt26Z9+/apvb1dr7zyivLy8qa1X1dXlyRNukIauG43NDSk
      vr6+ac3IAjO48+fP691335UkuVwuLVq0SEuXLlVGRobmzZs35XGys7OVmJgon8+n+vr6cQsk
      VVVV8vv9yszMVFJS0pTHk6T+/v5pbcdiBUKJwM1AVlaW9uzZo4MHD6qnp8e50F5eXq7+/n5t
      2rQp6AJBYFYWbPEhYN68eYqOjtbg4KB8Pt+0AtfZ2en8+ciRI+M+d7vdeuihh/Too49Oem9e
      RESE8vPzVVZWplOnTo0LXOD0NDDTA+YqAjdD69atU05Ojk6ePKljx46ptbVV/f39Ki8vV3l5
      uQoLC/XUU0+NuecsMEuJjIyc9NiRkZEaHBwMepoYzMMPPzzmmt7Q0JB8Pp/a29vV0NCg77//
      Xh9//LF6e3v1zDPPTHqsgoIClZWVqaamRjdu3HBuK+ns7NSFCxfkcrm0fv36aY1L0pifH/ix
      ELgQcLvdeuCBB3TPPfeopKREixcvVnR0tK5cuaKKigr19PSouLjYuRgfHx8vafRWi4kMDQ3p
      +vXrkiaf6d3M4/FMuKJ57do1vfXWW6qrq9MXX3yh/Pz8SW8jWbFihVJSUnTlyhV98803ys/P
      lySdOXNGfr9fq1evdn4OYK5ikSEMtmzZoldffVWPPPKIpNEbggMrp9Lo0w3S5IELfBYRETHt
      wE1m0aJF2rt3r3PNrKmpacp9AgsIN6+m3rx6Csx1BC5MXC6XduzY4cySmpubnc8CiwuXLl2a
      cP/AZ/Hx8ZNeL7sVsbGxuvPOOyVJbW1tU24fiFhdXZ36+/vV0dGh5uZmxcTE6O677w7JmIBw
      InBhFpgx3byKGDiNrK+vV3d3d9D9As943nHHHSEdT+CeveksWiQnJys9PV1DQ0PO0w3S6KNl
      wW5sBuYaAnebfD6fXn/9deeWiWB6enrU0NAgSWMu/q9Zs0bx8fEaGRnRF198MW6/q1evqqam
      RpLGPQUxkcHBQb3//vvq6OiYcJu2tjbngfrpPhQfmMWdOnWK01P812GR4TYNDw+rqalJTU1N
      8ng8uv/++5WcnCxJ6u3tVVVVlT766CN1d3crLi5Oq1atcvaNiorSpk2b9Nlnn+mTTz5RUlKS
      Nm3aJGl0MeBPf/qThoaGlJCQMO5U0Ov16sCBA5KkJ554QllZWZKk9vZ2lZaW6siRIyoqKtJ9
      992nJUuWOAsbDQ0Nevvtt3Xjxg0tWLBgzHgmk5+fr8OHDzvXEOPi4ia9QRmYSwjcbXK73crK
      ytK5c+fk9Xp18OBB57PS0lLnz9HR0XrhhRfGrThu3bpVDQ0NunTpkvbv369//OMfkkZvAh4e
      HlZUVJR++ctfjruVZGBgQBcvXpQ0GrtA4OLi4pSUlKSOjg6VlpaqtLRU8+bNU0pKirq7u3Xt
      2jVJo4sWu3fvnvYKaEJCgrKzs52Z6Pr166e8vQWYKwjcbXK73SopKZHX69Xx48fV0tKitrY2
      9fX1KSoqSqmpqcrNzVVRUVHQVdC4uDj95je/0V//+ledPXtW33333ZjP9uzZo5ycnHH7xcfH
      KyIiYtxpcWJiol577TV99dVXOnr0qK5evarr16+PWcjIyMjQ008/HfTXIAXGGGysGzZscAIX
      7ObeUKzyAuEQ4Z/oAhJuWW9vr0pKSrRz505t3bp12vt1d3fr3//+t1wul5KSknTHHXfM+AH2
      wcFBtbW1qaOjQ/Hx8UpNTeW+NfzkMIObAxISErRu3bqQHjM6OlrLly+f8LeVAD8FrKICMIvA
      hZDL5dLSpUudC/8AZhfX4ACYxQwOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6A
      WQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWQQOgFkEDoBZBA6AWfzDz8A0
      9ezLDctx/6f9D2E57nQdWPK/YT1+/G9qw3r8yTCDA2AWgQNgFoEDYBaBA2AWgQNgFoEDYBaB
      A2AWgQNgFoEDYBaBA2AWgQNgFoEDYNb/AXRZTIuCrbYdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='cash flow year after' width='312'>
      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
      7e1qb2+XJM2fP187duzQqlWrxu37z3/+U5999tmY1y5evKiLFy/qzJkzeuGFF5SWlnZD42lo
      aNDx48en3O7+++/X3LlzrZ9bWlrkdrutn9evX6/c3NxJj1FfXz/ms5KTkwkcZhUCNwNut1t7
      9+5VMBhUYmKiCgoK1NDQIKfTqYULF8rtdqunp0cdHR3jAnfs2DErbkVFRXrkkUc0f/581dXV
      6b333tPFixf1t7/9TX/84x9vaEyh0+ONGzcqLy9vwu2SkpImPU5tbe2UgTt58qQkKT4+XsPD
      wzc0TuCnQOBmoKqqSsFgUC6XS+Xl5UpKStKzzz6rwsJCPfroo/J6vfr000+Vmpo6bt/Dhw9L
      klasWKHf/va3SkgY/avYtGmT7Ha7/vGPf+j8+fNqa2tTTk7OtMd06dIlSVJpaamWL19+w7/T
      6tWrVV9fr5MnT+rxxx8fcxp7Pb/fr5aWFknSqlWrVF9ff8OfBUQbiwwzcO7cOUnS1q1blZyc
      PO79RYsWaefOndq4ceOY18+fP29dr9u+fbsVt5C7777bOtX76quvpj2eQCBgnSpnZWVN/xe5
      zh133CG73S6fz2cFLJy6ujqNjIwoOztbTqfzpj4LiDYCNwOh2c2Nrn6ePn1akrR48WItXbo0
      7DZ33323JE0amR8LnZ7OmzfvphYoJCkhIUGrV6+WNHqaOpHQ6WlJScmEszwg1gjcDCxZskSS
      9O6778rr9U57P5/PJ0lauXLlhNsUFhaO2XY6Qqen2dnZ094nnHXr1kkanaUNDQ2Ne7+np0dn
      z56VNBo4YLbiGtwMbNmyRXv27JHX69Urr7yioqKiae3X09MjSZOukIau2w0NDSkQCExrRhaa
      wZ09e1bvvfeeJMlms2nBggVavHixcnNzNWfOnCmPk5+fr7S0NPl8PjU1NY1bIKmrq1MwGFRe
      Xp7S09OnPJ4k9ff3T2s7FivM4/f7Y/bZBG4GXC6Xdu3apf3798vv91sX2qurq9Xf368NGzaE
      XSAIzcrCLT6EzJkzR4mJiRocHJTP55tW4Lq7u60/Hzp0aNz7drtdDzzwgB5++OFJ782Li4tT
      cXGxqqqqdOLEiXGBC52ehmZ6wGxF4GZozZo1Kigo0PHjx3XkyBF1dHSov79f1dXVqq6uVmlp
      qZ544okx95yFZinx8fGTHjs+Pl6Dg4NhTxPDefDBB8dc0xsaGpLP55PX61Vzc7N++OEHffLJ
      J+rr69NTTz016bFKSkpUVVWlhoYGXbt2zbqtpLu7W+fOnZPNZtPatWunNS5JY37/W1Xs5iG3
      NofDEbPPJnARYLfbdd999+muu+5SRUWFFi5cqMTERF26dEk1NTXy+/0qLy+3LsaH/sInm7oP
      DQ3p6tWrkiaf6V3P6XROuKJ55coVvf3222psbNSXX36p4uLiSW8jWbZsmTIzM3Xp0iV9++23
      Ki4uliSdOnVKwWBQK1eujOl/uMB0sMgQBZs2bdJrr72mhx56SNLoDcGhlVNp9OkGafLAhd6L
      i4ubduAms2DBAu3evdu6Ztba2jrlPqEFhOtXU69fPQVmOwIXJTabTdu2bbNmSW1tbdZ7ocWF
      CxcuTLh/6D2HwzHp9bIbkZycrNtvv12S1NnZOeX2oYg1Njaqv79fXV1damtrU1JSku68886I
      jAmIJgIXZaEZ0/WriKHTyKamJvX29obdL/SM52233RbR8YTu2ZvOokVGRoZycnI0NDRkPd0g
      jT5aFu7GZmC2IXA3yefz6Y033rBumQjH7/erublZksZc/F+1apUcDodGRkb05Zdfjtvv8uXL
      amhokKRxT0FMZHBwUB988IG6urom3Kazs9N6oH66D8WHZnEnTpzg9BS3HBYZbtLw8LBaW1vV
      2toqp9Ope++9VxkZGZKkvr4+1dXV6eOPP1Zvb69SUlK0YsUKa9+EhARt2LBBn3/+uT799FOl
      p6drw4YNkkYXA/7yl79oaGhIqamp404FPR6P9u3bJ0l67LHH5HK5JEler1eVlZU6dOiQysrK
      dM8992jRokXWwkZzc7PeeecdXbt2TfPmzRsznskUFxfr4MGD1jXElJSUSW9QBmYTAneT7Ha7
      XC6Xzpw5I4/Ho/3791vvVVZWWn9OTEzUc889N27FcfPmzWpubtaFCxe0d+9e/etf/5I0ehPw
      8PCwEhIS9Jvf/GbcrSQDAwM6f/68pNHYhQKXkpKi9PR0dXV1qbKyUpWVlZozZ44yMzPV29ur
      K1euSBpdtNi5c+e0V0BTU1OVn59vzUTXrl075e0twGxB4G6S3W5XRUWFPB6Pjh49qvb2dnV2
      dioQCCghIUFZWVkqLCxUWVlZ2FXQlJQUvfjii/r73/+u06dP6/vvvx/z3q5du1RQUDBuP4fD
      obi4uHGnxWlpaXr99df19ddf6/Dhw7p8+bKuXr06ZiEjNzdXTz75ZNivQQqNMdxY161bZwUu
      3M29kVjlBaIhLjjRBSTcsL6+PlVUVGj79u3avHnztPfr7e3Vf//7X9lsNqWnp+u2226b8QPs
      g4OD6uzsVFdXlxwOh7KysrhvbYb8ewqjctxfe1+OynGna9+iP0X1+I4X3VNvFCXM4GaB1NRU
      rVmzJqLHTExM1NKlSyf8thLg54BVVADGInARZLPZtHjxYuvCP4DY4hQ1gubOnatXX3011sMA
      8D/M4AAYi8ABMBaBA2AsAgfAWAQOgLEIHABjETgAxiJwAIxF4AAYi8ABMBaBA2AsAgfAWAQO
      gLEIHABjETgAxiJwAIxF4AAYi8ABMBaBA2AsAgfAWAQOgLEIHABjETgAxiJwAIxF4AAYi8AB
      MBaBA2AsAgfAWAQOgLEIHABjETgAxiJwAIxF4AAYi8ABMBaBA2AsAgfAWAQOgLEIHABjETgA
      xiJwAIxF4AAYi8ABMBaBA2AsAgfAWAQOgLEIHABjETgAxiJwAIxF4AAYi8ABMBaBA2AsAgfA
      WP8Pr+xd9Jiv3XEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='final dashboard' width='384'>
      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
      COrVq8e1a9fKtRsVFYVery/X71K5FQrFA33lpbHiarW6SrHq/4Tz58/fNz6+LP8k9n7OnDl/
      OSn4qNi6dStr166VQi7vx+bNmzlx4kS1y/NvJDs7m8OHD/Ptt9/StGlTRo0ahb29PVASkOLk
      5MTJkyeljJoffPABUPIQf+ONN4CS7KClYbc1a9Zk48aNjBgxQpr4NjAw4L333gOgSZMm0u/B
      3d2db775hi1btjB16lQ6dOjAO++8g6GhIV26dKFly5bY29szevRoSd7SsPdWrVoxePBgSV5n
      Z2eGDh3Kq6++ip+fH7t372bLli2YmZkxefJk6frSrTbL/mbLHluxYgUKhYJ9+/ZVbQ7gyy+/
      FLdu3RLnzp0Tr7/+unjrrbck39ejoKioSCxevPiB5S5cuCCWLVsmdDqdmDx5cjl/5v34J/7o
      qhIUFCSSkpKEEEIEBASI5cuXi/Pnz4tz586J5cuXi82bN4uUlBRx8eJFIUSJPzIhIUHk5OSI
      MWPGSPUkJiaKS5cuSZ8DAwNFVlaWEEKIvXv3iiVLloikpCQREREhbt68KdRqtTh16pQoLCwU
      a9asEadPnxabNm0SS5YsEbGxsUIIIe7evSs+//xzIUSJD7B0rqDsHM69e/fE0qVLxZYtW8TN
      mzfFwYMHJRmSk5NFYGCgEEKIiIgIcfXqVWn+Jjs7W3z33XciJCSkXL/Lyj116lTp78o4efKk
      2LRpk4iJiRFjxowRgYGB4sqVKyI5OVn4+/uLlJQUkZqaKi5fviwOHjwo0tPTRXh4uBBCiGvX
      ron8/Hxx4MABER0dLdRqtYiMjBSXLl0ScXFx4vDhwyIxMVGcP39exMfH37fO/Px8IUTJPNWh
      Q4fEokWLxKVLl0RiYqLw9/cXmZmZIisrSxw9elSEhISIoqIicevWLREUFCTu3LkjFi1a9E9v
      nfuSkpIiDh8+LMLDw0V0dLQYPHiwOHv2rHj77bfFwYMHRW5urggKChIBAQFCr9eL69evi2vX
      romcnBwxYcKEvzXH8zwQHBwshg4d+qTFeGp5YCoInU7HlClT+O677xg7dizLli3DysqKpKQk
      Fi5ciEKh4NNPP+X7778nOzsbKysr3N3d6dy5Mzdv3sTe3p69e/eiVqt5//332b9/P1qtFicn
      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
      ybFYLCxYsIANGzaQnp7OwYMHr9pOKpVau1ZUKhUeHh6Eh4fTrVvjFy4gIMB68gdwcHCgsrIS
      nU6HjY0NKpWK8vLGL05ZWRkqlQqtVnvVfkaNGsXevXvJysqid+/e7NmzB0dHRyIjI3n//fdR
      qVS4urpaP6wzZ85kwoQJrFu3jm+++YaAgAAA7O3tb2p/wh9DTsVlErIO4aZyw9fZn92pO8hQ
      p3E4Kw4bmS3dvXqisrVnf9puHGwdqNVpSLqSiLeTL38e+CyrTq6goq7x82Ajs6W8rozU4mT8
      XPyt+7jW9+lyWcY1y+Xo6EhxcTFdu3altLT0uhdrk5KScHBwQCKRkJ6eTmhoKH5+fs3y8fDw
      QK/XX/OHiVQqtX6OT5w4webNm4mJiWHBggXN0hkMBnJycnBz+2Vkk4ODA35+fvTv35++ffs2
      Sx8ZGcnhw4et+83IyCA6OhqFQoGjoyNqtdraI+Dg4NBs28zMzLYbAH7LzkbJnP5PsC7xX8Rm
      7Edpo+Sl4W/Q07c3By/t4/SVk1gsFiQtbSxpvnR48L3sTt1BdOdhSCRXb9HSsl/r5hnB0C4j
      WHHsUwAGdx5OuFdPzhacvuY2QzoPZ82pb1m493W+mL4KZ6ULEonk/9l78zgpymv//13Ve/fs
      MzALw64gMOyLiCIIaIxJjJAoGrOo33hNTH4mMTEmxuVGc3Ovr/gymuiNJrlmUZTgBnFDBFkE
      BZFN2ZEdZoYZmKWn96Xq90fzFNU11T0LNAjW5/Wa10x3PfUs1dPnPM85n3MOVVVV3HXXXUSj
      US644IJ2448fP57vf//7XH/99XzrW9/ioYceoqKiApvNxj333NNuriUlJVx11VXMnj0bWZb5
      85//zHPPPcdNN91Ea2srTz/9NPPmzUu7T5IkJk+ezEMPPcTVV1+NLMtcd911/OxnP+OTTz6h
      ra2N//u//0u75/e//z0HDhygpaWF733ve7S1pZzyU6ZM4dlnn+1wPAtnB97f+x7v732PEVWj
      +MHkn7L+0FoeeOsX2CQb35lwK/mufL436Q6efv8PrD3wAWN7T2Biv0t4b/dS7lrww9TG7fhm
      bkLfiSzZ+Ta/WXQvd1z6M6Tj39ZM36f3di/T5pFqe+L/5q677uKmm26ioKCAqVOn0rt374zf
      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
      84XwjdS7XYlpCQnw7rvvcuLECY4cOcL//d//JWoZFZULgpOuk/ROy8OkM5Npy6LeUweAWW8h
      J6UHbr9bHlvjOsmT6x9hVI+f8MDEh0nSnL6PKywsZMWKFeTm5rJixQpqampYu3Ytjz/+OCtX
      ruTNN98kPT2dkydPcvHFF3PzzTczcuRIXnjhBXmOYcOGyXW5amtr0ev1bN++nffff58XX3yR
      V199lRUrVnDLLbdw1113cfnllxMOh5k1axb5+fksWrSI9PR0kpOTSUlJYdeuXQD85S9/4eGH
      H2br1q0AlJeXc+jQIZKTk/noo49+9DUUPgGz2SyXSgiHw3i93giTTSyhL1COa670srKekDKT
      WJhWsrOzqa6u5siRI1RVVckKp6Pg8/nYcuRw4jKB6+rqmDRpEoFAgHfeeSdRy6ioXBD0z8hn
      9Z63Gdx1GJUNFWRam5qcfH10G9uPfMkAhY/g/R82kW7JwKgzsuXAZvplDKBbcnzPVE5ODh9+
      +CHBYJCcnBwKCwspLi5m5syZXHnllZSVlbF79245V6euro7PP/+c8vJy7HY7gwcPxmQy0aNH
      D9577z10Oh05OTkx16qrq2Pbtm1s2bKF3r17k5+fT319PQDfffcd69evlysDpKamotFomDp1
      KkOGDGmX6win73BFFq2IChLHojN+Ywl5ZfG3eH4CcTy6rIR40sjOziYQCBAMBqmoqMBqtf4o
      n0d7Eg6HcQf8aJ988sknE7FA//79WbduHWVlZcyaNeuMkqxnQ6w61spj7x34Ie65/bpk0Cs1
      DYAfHCc4XFsTc5xOq6W4T18Avj9RxdG62pjjDElJXNw772y2H5PWdOs533N2hj125jklNORn
      DkSSJAZkDeJobRlHa8u4ceRtpFu6sPbblVgNNpJNKVxXOBudtskx5Ql40CfpcflduPwuMq1Z
      pJrT5DvRYcOGIUkSw4cPR5IkbrzxRr799lv27t3LE088wfHjx1m2bBlz5sxh7NixAGzfvp2L
      L76YQCAgPw08+uij5ObmYjKZGDBgACNGjGDz5s24XC7mz5+PwWCge/fuct384cOHk5GRwfr1
      67njjjt49913yc7OZvTo0QwYMICPP/6Y4cOHc8MNNyBJEkVFRRQVFbF+/XpSU1MZPnx4u19v
      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
    </thumbnail>
    <thumbnail height='384' name='histogram' width='384'>
      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
      2LLZ2mtu+78n5e/Z0+s2oy9dIrfG/R7L8zw5jtO/962BrLUqlUrK5/MDXUpoxhh5nqdcLjfQ
      pYRWLBZr/swOJPq4ASeBt27dqpEjR2rWrFnq6OiofHsEAAysyL/CdXV16b/+67+USqW0ePFi
      TgADwCAReQDMnz9f8+fPj7oZAECNuA8AABKKAACAhCIAACChCAAASCgCAAASigAAgIQiAAAg
      oQgAAEgoAgAAEooAAICEIgAAIKEIAABIKAIAABKKAACAhCIAACChCAAASCgCAAASigAAgISK
      PACsterp6VFXV5eMMVE3BwAIKfI1gTds2KBNmzYplUpp9OjR+sxnPsPC8AAwCEQeAJMnT9YZ
      Z5wha63+8z//U9ZaAgAABoHIA2DChAnq7OzUihUrNG/ePDmOoyAI5Pu+pMNTRJ7n9b0BW32T
      sldWsVisabelUjnUdj09PTKuG3q/xoYoWFK5XHvNNsS+Sz0lOena3nb/F1+XquzbnXednFGn
      1rTftp6ifrlrR9XtLp9+ulL9/NJgjKm5PweaMSZW06ZBENDHEat3H0ceAO+++66WLVumz3zm
      M5oyZYokyXVduX84aPq+r3SNB6SjOKoaAtlMVoVCoabd5rxwAZDP55Wrof4g5Ictm6295jAj
      q1w+J7fG/Xa+9qiqdXJ2zpVK17jf/aUevbj3narb/b8585RO9f10lbVWpVJJ+Xy+z/toNGOM
      PM9TLpcb6FJCKxaLNX9mBxJ93ICTwGvXrtXChQuVz+fV2toa6lsqACB6kY8AWlpa1Nraqk2b
      Nimfz2v8+PFRNwkACCHyAJg7d27UTQAA+oAbwQAgoQgAAEgoAgAAEooAAICEIgAAIKEIAABI
      qP8PdQjFUGRxsYkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='yearly profit conversion' width='274'>
      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
      TLm5uZKk48ePj3g9eFkTPHMBOCMxWrVqlbKysnTs2DEdPnxYzc3N6unpUWlpqUpLS5Wfn6+n
      nnpKs2fPntJxBC9BwsPDx90u+PpolyzXysvLU0lJiaqqqnT16lVFRUVJktrb23X27Fm5XK4x
      b24bzVR//9crND+Hb32xsbEhOQ5nJCHgdrv1wAMP6KWXXpIkzZ8/X0lJSZKksrIyvfPOO1N+
      m3rwTGOiU9XgjXMTnbksWbJESUlJ6u3t1Xfffec8f/LkSQUCAf3yl78M2V9C3PoIyRTYsGGD
      3njjDT3yyCOShm5cO3Xq1JS+59y5cyUNzUUMDg6OuV1nZ+ew7ccTnEi9dvXm2tUaIIiQTBGX
      y6UtW7Zo6dKlkjTl8yVxcXEKCwtTIBBwbs8fzfnz5yVJ8fHxEx4zGIuamhr19PSora1NjY2N
      ioqK0t133x2ageO2QEimWHBVY7KrFjfK5XIpJSVFkvTvf/971G0uXLjgfDDvjjvumPCYiYmJ
      Sk1NVX9/vyorK52zkZycnHFXhjDzEJIb5PP59NZbbzlLoaPx+/2qq6uTJC1evHjKx3TfffdJ
      GlppCV7CXKukpESSlJKS4pwpTSR4VnL8+HEuazAmVm1u0MDAgBoaGtTQ0CCPx6P7779fiYmJ
      koYmNCsqKvTJJ5+os7NTMTExWrZsWUje1+v1as+ePZKkJ554QhkZGc5r+fn5+uijj9Td3a23
      335bRUVFzmrJ559/riNHjkiSfvWrX036/XJzc3XgwAFnjicmJmbCD/xh5iEkN8jtdisjI0On
      T5+W1+vV3r17ndeKi4udryMjI/XCCy8MW+EoKyvTgQMHhh3v2rOaV155Zdhdr+vXr9eWLVsk
      Dd2Of+7cOUlDUbk2JLNnz9azzz6r3bt3y+v16ve//73i4+PV39/v3LCWlZXlnLlMRlxcnDIz
      M50zq9WrV0+4xIyZh5DcILfbraKiInm9Xh05ckRNTU1qaWlRd3e3IiIilJycrOzsbBUUFIxY
      anW5XMN+f8lPdXd3D3scvIdDGlr3D06qjmbt2rWKjIzUu+++q97eXrW1tUkausls5cqVeu65
      5xQRMfKPPTjG0ZaF16xZ44RktJvQJlpKxu0vLMDv4QuZrq4uFRUVaevWrdq4ceO0jmVwcFBN
      TU26fPmyXC6XfvGLXygmJmZax/Rz4t+VHbJj/br11ZAdazL2LPhTyI4V+3L1xBtNAmcktymX
      y6XU1FSlpqZO91AwA7BqA8CMkISQy+XSwoULh02AAjMBlzYhNHv2bL3++uvTPQzgpuOMBIAZ
      IQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBES
      AGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFg
      RkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaE
      BIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgA
      mBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZ
      IQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBES
      AGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFg
      RkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaE
      BIAZIQFgRkgAmBESAGaEBIAZIQFgRkgAmBESAGaEBIAZIQFgRkhCrK+vb7qHANx0hCSEAoGA
      CgsLVVZWNt1DAW4qQjIFvv/+++veZ3BwUL29vVMwGmDqRUz3AG4Hvb29OnnypJqbmyVJtbW1
      crvdWrRokbKysuRyjd3rw4cPq7y8XOfOndPVq1eVkpKijIwMbdq0STExMdc9lm+//VYVFRXj
      bpOYmKjHHntMYWFhznNffvmlvF6vJCk6Olrbtm2b8L26u7u1f/9+53FBQYGWLFly3WPGrY+Q
      GB09elQffPCBurq6nOeamprU1NQkSZo7d662bdumFStWjNj3n//8pz7//PNhz124cEEXLlzQ
      6dOn9dJLLyk+Pv66xlNVVaVjx45NuN2DDz6o2bNnO4/r6+tVXV3tPF67dq3S0tLGPUZlZeWw
      94qOjiYkMxQhMaiurtbu3bsVCAQUGRmprKwsVVVVyePxaP78+aqurlZHR4eam5tHhOTo0aNO
      RHJycvTYY49p7ty5qqio0Pvvv68LFy7ob3/7m/74xz9e15iCl1Xr169Xenr6mNtFRUWNe5zy
      8vIJQ3LixAlJUnh4uAYGBq5rnLi9EBKDkpISBQIBZWRkqLCwUFFRUXr++eeVnZ2txx9/XK2t
      rfrss88UFxc3Yt9Dhw5JkpYtW6bf/va3iogY+qPYsGGD3G63/vGPf+jcuXNqbGxUamrqpMd0
      8eJFSVJ+fr6WLl163d/TypUrVVlZqRMnTujJJ58cdvlzLb/fr/r6eknSihUrVFlZed3vhdsH
      k60GZ8+elSRt3rxZ0dHRI15fsGCBtm/frvXr1w97/ty5c858ytatW52IBN17773OJcLXX389
      6fF0d3c7l1jJycmT/0aucdddd8ntdsvn8zmhGE1FRYUGBweVkpIij8dzQ++F2wchMQj+tL7e
      1ZZTp05JkhYuXKjFixePus29994rSeP+Y/6p4GXNnDlzbmiiVpIiIiK0cuVKSUOXN2MJXtbk
      5eWNedaCmYOQGCxatEiStG/fPrW2tk56P5/PJ0lavnz5mNtkZ2cP23Yygpc1KSkpk95nNGvW
      rJE0dNbR398/4vWOjg6dOXNG0lBIAOZIDDZt2qRdu3aptbVVr732mnJycia1X0dHhySNuyIT
      nFfp7+9Xd3f3pM4wgmckZ86c0fvvvy9JcrlcmjdvnhYuXKi0tDTNmjVrwuNkZmYqPj5ePp9P
      tbW1IyaKKyoqFAgElJ6eroSEhAmPJ0k9PT2T2o5J25vL7/eH5DiExCAjI0M7duzQ3r175ff7
      nQnH0tJS9fT0aN26daNOlAbPMkabhA2aNWuWIiMj1dfXJ5/PN6mQtLe3O18fPHhwxOtut1sP
      PfSQHn300XHvbQkLC1Nubq5KSkp0/PjxESEJXtYEz1wAQmK0atUqZWVl6dixYzp8+LCam5vV
      09Oj0tJSlZaWKj8/X0899dSwezaCP3XDw8PHPXZ4eLj6+vpGvbwYzcMPPzxszqW/v18+n0+t
      ra2qq6vTjz/+qE8//VRdXV165plnxj1WXl6eSkpKVFVVpatXrzrLxe3t7Tp79qxcLpdWr149
      qXFJGvb9/xyE5ufwrS82NjYkxyEkIeB2u/XAAw/onnvuUVFRkebPn6/IyEhdvHhRZWVl8vv9
      KiwsdCYlg394451W9vf368qVK5LGP3O5lsfjGXMF5fLly3r33XdVU1Ojr776Srm5ueMuDy9Z
      skRJSUm6ePGivvvuO+Xm5kqSTp48qUAgoOXLl4fsLyFufUy2ToENGzbojTfe0COPPCJp6Ma1
      4EqNNHS3qzR+SIKvhYWFTTok45k3b5527tzpzGk0NDRMuE9wIvXa1ZtrV2uAIEIyRVwul7Zs
      2eL81G9sbHReC06ynj9/fsz9g6/FxsaOO59xPaKjo3XnnXdKklpaWibcPhiLmpoa9fT0qK2t
      TY2NjYqKitLdd98dkjHh9kBIpljwDODaVYvg5Udtba06OztH3S/4GZY77rgjpOMJ3vMymcnb
      xMREpaamqr+/37nbVRq6pX+0G/AwcxGSG+Tz+fTWW285S6Gj8fv9qqurk6Rhk6ArVqxQbGys
      BgcH9dVXX43Y79KlS6qqqpKkEXfFjqWvr08ffvih2traxtympaXF+WDeZD9cFzwrOX78OJc1
      GBOTrTdoYGBADQ0NamhokMfj0f3336/ExERJUldXlyoqKvTJJ5+os7NTMTExWrZsmbNvRESE
      1q1bpy+++EKfffaZEhIStG7dOklDk6J/+ctf1N/fr7i4uBGXEF6vV3v27JEkPfHEE8rIyJAk
      tba2qri4WAcPHlRBQYHuu+8+LViwwJngraur03vvvaerV69qzpw5w8YzntzcXB04cMCZ44mJ
      iRn3RjrMTITkBrndbmVkZOj06dPyer3au3ev81pxcbHzdWRkpF544YURKxwbN25UXV2dzp8/
      r927d+tf//qXpKGb1QYGBhQREaHf/OY3I5aIe3t7de7cOUlDUQmGJCYmRgkJCWpra1NxcbGK
      i4s1a9YsJSUlqbOzU5cvX5Y0NHm7ffv2Sa+4xMXFKTMz0zmzWr169YTL1ph5CMkNcrvdKioq
      ktfr1ZEjR9TU1KSWlhZ1d3crIiJCycnJys7OVkFBwairLjExMXr55Zf197//XadOndIPP/ww
      7LUdO3YoKytrxH6xsbEKCwsbcTkVHx+vN998U998840OHTqkS5cu6cqVK8MmdNPS0vT000+P
      +usBgmMcbaxr1qxxQjLaTWihWFXCrS0sMNYFPq5bV1eXioqKtHXrVm3cuHHS+3V2duq///2v
      XC6XEhISdMcdd5g/CNfX16eWlha1tbUpNjZWycnJ3PdxDf+u7JAd69etr4bsWJOxZ8GfQnas
      2JerJ95oEjgj+RmIi4vTqlWrQnrMyMhILV68eMxPFwOhxKoNADNCEkIul0sLFy50JkCBmYJL
      mxCaPXu2Xn/99ekeBnDTcUYCwIyQADAjJADMCAkAM0ICwIyQADAjJADMCAkAM0ICwIyQADAj
      JADMCAkAM0ICwIyQADAjJADMCAkAM0ICwIyQADAjJADMCAkAM0ICwIyQADAjJADMCAkAM0IC
      wIyQADAjJADMCAkAM0ICwIyQADAjJADMCAkAM0ICwIyQADAjJADMCAkAM0ICwIyQADAjJADM
      CAkAM0ICwIyQADAjJADMCAkAM0ICwIyQADAjJADMCAkAM0ICwIyQADAjJADMCAkAs/8FQ2Rd
      9P1yGMgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='yearly profit each year after' width='312'>
      iVBORw0KGgoAAAANSUhEUgAAATgAAAGACAYAAAA55n5yAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAckUlEQVR4nO3dXWxUZeLH8V+nbwxlWiClLzhAW9YpXSoVsMWCuGIN8SUBlPgS2Q0XhkXd
      XmhqdvfCqDF7ZbJhvdndG7MJIgaCumpWrSkYK9CFQqvdaUthC6WdUGFq6XQ6ldKX+V905/yp
      nb5AZ5z6+P1cMTPnnHmq5stzznNOjQsGg0EBgIFssR4AAEQLgQNgLAIHwFgEDoCxCBwAYxE4
      AMYicACMReAAGIvAATAWgQNgLAIHwFgEDoCxCBwAYxE4AMYicACMlRDrAeDnob+/f1rbDQ8P
      R3kk+DmJ4xdeAjAVp6gAjEXgABiLwAEwFoGLksHBwVgPAfjZI3BREAwGVV5erpqamlgPBfhZ
      I3BR9O2338Z6CMDPGvfBRdDAwIBOnz6tjo4OSVJTU5PsdruWLFmigoIC2WxT/33idrv12Wef
      KS0tTbt27brlsXz99deqq6ubdJuMjAw98sgjiouLs977/PPP5fF4JEnJycnasWPHlN8VCAR0
      4MAB63VZWZmWLVt2iyMHIofARcjx48f13nvvqa+vz3qvvb1d7e3tkqT58+drx44dWrVqVdj9
      W1tb9cEHH+jcuXPWe88888y0ohhOQ0ODTpw4MeV2999/v+bOnWu9bmlpkdvttl6vX79eubm5
      kx6jvr5+zHclJycTOMwKBC4C3G639u7dq2AwqMTERBUUFKihoUFOp1MLFy6U2+1WT0+POjo6
      xgXO4/Howw8/VENDQ0THFDo93rhxo/Ly8ibcLikpadLj1NbWThm4U6dOSZLi4+N5EgGzCoGL
      gKqqKgWDQblcLpWXlyspKUnPPvusCgsL9eijj8rr9eqTTz5RamrquH3feustXbp0SZKUl5en
      Bx98UH/9619nPKbLly9LkkpLS7V8+fKb3n/16tWqr6/XqVOn9Pjjj485jb2R3+9XS0uLJGnV
      qlWqr6+/9UEDEUbgIuD8+fOSpK1btyo5OVk/fPpt0aJF2rlz54T7O51ObdmyRUVFRbp27dqM
      xxMIBKxT5aysrFs6xh133KEzZ87I5/OppaVFK1asCLtdXV2dRkZGlJ2dLafTSeAwqxC4CAjN
      bgYGBm563927dyszM3PCGdKtCJ2ezps3TykpKbd0jISEBK1evVrHjx9XbW3thIELnZ6WlJSM
      CzsQa9wmEgFLliyRJL377rvyer03tW9WVlZE4yb9/+lpdnb2jI6zbt06SaOztKGhoXGf9/T0
      WIsiJSUlM/ouIBqYwUXAli1btGfPHnm9Xr3yyisqKiqK6XhCM7hz587p4MGDkiSbzaYFCxZo
      8eLFys3N1Zw5c6Y8Tn5+vtLS0uTz+dTU1DRugaSurk7BYFB5eXlKT0+P/A8CzBCBiwCXy6Vd
      u3Zp//798vv91nWo6upq9ff3a8OGDcrJyfnRxtPd3W39+fDhw+M+t9vteuCBB/Twww9PehtK
      XFyciouLVVVVpZMnT44LXOj0NDTTA2YbAhcha9asUUFBgU6cOKGjR4+qo6ND/f39qq6uVnV1
      tUpLS/XEE0+MuecsWh588EEtXbrUej00NCSfzyev16vm5mZ9//33+vjjj9XX16ennnpq0mOV
      lJSoqqpKDQ0Nun79unVbSXd3t86fPy+bzaa1a9dG9ecBbhWBiyC73a777rtPd911lyoqKrRw
      4UIlJibq8uXLqqmpkd/vV3l5ecSvuf2Q0+mU0+kM+9nVq1f19ttvq7GxUV988YWKi4snvY1k
      2bJlyszM1OXLl/XNN9+ouLhYknT69GkFg0GtXLlSDocjKj8HMFMsMkTRpk2b9Nprr+mhhx6S
      NHpD8JkzZ2I6pgULFmj37t3WNbPW1tYp9wktINTW1lrv3bh6CsxWBC7KbDabtm3bZs2S2tra
      YjsgjT5Kdfvtt0uSOjs7p9w+FLHGxkb19/erq6tLbW1tSkpK0p133hnVsQIzQeB+JKEZ03T/
      5yvRFrpnbzr3yWVkZCgnJ0dDQ0PW0w2SVFRUpOTk5KiOE5gJAjdDPp9Pb7zxhnXLRDh+v1/N
      zc2SNObifzQMDg7q/fffV1dX14TbdHZ2Wg/UT/eh+NAs7uTJk5ye4ieDRYYZGh4eVmtrq1pb
      W+V0OnXvvfcqIyNDktTX16e6ujp99NFH6u3tVUpKyoRPBNwsj8ejffv2SZIee+wxuVwuSZLX
      61VlZaUOHz6ssrIy3XPPPVq0aJG1sNHc3Kx33nlH169f17x586Y9nuLiYh06dMi6hpiSkqKV
      K1dG5GcBooXAzZDdbpfL5dLZs2fl8Xi0f/9+67PKykrrz4mJiXruuefGrDjW1NTo0KFDY453
      4yzwpZdeGrPiunHjRm3btk3S6CnmhQsXJI3GLhS4lJQUpaenq6urS5WVlaqsrNScOXOUmZmp
      3t5eXb16VdLoPW47d+6c9gpoamqq8vPzrZno2rVrFR8fP619gVghcDNkt9tVUVEhj8ejY8eO
      qb29XZ2dnQoEAkpISFBWVpYKCwtVVlY27reJ2Gy2Mb8/7ocCgcCY1zf+aiOHw6G4uLhxp8Vp
      aWl6/fXX9dVXX+nIkSO6cuWKrl27posXL1rb5Obm6sknnwz7a5BCYwz3m0/WrVtnBS7czb3h
      9gFiif/xcxT09fWpoqJC27dv1+bNm2M6lsHBQXV2dqqrq0sOh0NZWVnct4afDWZwhktMTNTS
      pUujvrgBzEasogIwFoGLApvNpsWLF1sX/gHEBtfgABiLGRwAYxE4AMYicACMReAAGIvAATAW
      gQNgLAIHwFgEDoCxCBwAYxE4AMYicACMReAAGIvAATAWgQNgLAIHwFgEDoCxCBwAYxE4AMYi
      cACMReAAGIvAATAWgQNgLAIHwFgEDoCxCBwAYxE4AMYicACMReAAGIvAATAWgQNgLAIHwFgE
      DoCxCBwAYxE4AMYicACMReAAGIvAATAWgQNgLAIHwFgEDoCxCBwAYxE4AMYicACMReAAGIvA
      ATBWQqwHAPxU+PcUxnoIP0mOF90x+25mcACMReAAGIvAATAWgQNgLAIHwFgEDoCxCBwAYxE4
      AMYicACMReAAGIvAATAWgQNgLAIHwFgEDoCxCBwAYxE4AMYicACMReAAGIvAATAWgQNgLAIH
      wFgEDoCxCBwAYxE4AMYicACMReAAGIvAATAWgQNgLAIHwFgEDoCxCBwAYxE4AMYicACMReAA
      GIvAATAWgQNgLAIHwFgEDoCxCBwAYxE4AMYicACMReAAGIvAATAWgQNgLAIHwFgEDoCxCBwA
      YyXEegDAz92vvS/H9Pv3LfpTTL8/mpjBATAWgQNgLAIHwFgEDoCxCBwAYxE4AMYicACMReAA
      GIvAATAWgQNgLAIHwFgEDoCxCBwAYxE4AMYicACMReAAGIvAATAWgQNgLAIHwFgEDoCxCBwA
      YxE4AMYicACMReAAGIvAATAWgQNgLAIHwFgEDoCxCBwAYxE4AMYicACMReAibHBwMNZDAPA/
      BC6CgsGgysvLVVNTE+uhABCBi4pvv/021kOwXLt2TcFgMNbDAGIiIdYDMMHAwIBOnz6tjo4O
      SVJTU5PsdruWLFmigoIC2WxT/z3idrv12WefKS0tTbt27ZrReK5evaqPP/5Y586d05UrV2S3
      27V8+XKtX79ea9euDbvP559/Lo/HI0lKTk7Wjh07pvyeQCCgAwcOWK/Lysq0bNmyGY0diCQC
      N0PHjx/Xe++9p76+Puu99vZ2tbe3S5Lmz5+vHTt2aNWqVWH3b21t1QcffKBz585Z7z3zzDPT
      imI4V65c0Z49e9Td3W299/3338vtdquxsVE+n0/333//uP1aWlrkdrut1+vXr1dubu6k31Vf
      X68TJ05Yr5OTkwkcZhUCNwNut1t79+5VMBhUYmKiCgoK1NDQIKfTqYULF8rtdqunp0cdHR3j
      AufxePThhx+qoaEhYuMZGRnRm2++qe7ubiUlJenpp59WYWGhrly5YkX0wIEDyszM1MqVKyc9
      Vm1t7ZSBO3XqlCQpPj5ew8PDEfs5gEjhGtwMVFVVKRgMyuVy6c9//rOef/55SVJhYaF+97vf
      6fXXX9f69euVmpo6bt+33nrLilteXp6170z85z//UVdXl2w2m5599lmVlpbK4XBo+fLlKi8v
      15IlSyRJR44cmfAYq1evljQar8mu3fn9frW0tEjShLNTINYI3AycP39ekrR161YlJyeP+3zR
      okXauXOnNm7cGHZ/p9Op559/Xn/4wx+Un58/4/F8+eWXkkYD+8MZ2pw5c7R161ZJUmNjo777
      7ruwx7jjjjtkt9vl8/msgIVTV1enkZERZWdny+l0znjsQDQQuBmIi4uTNLrIcLN2796tl19+
      WUVFRREbTyhIpaWlYT9fuXKlHA6HgsHghPFKSEiwZnG1tbUTflfo9LSkpMT65wDMNgRuBkKn
      fO+++668Xu9N7ZuVlRXRMAQCAQ0NDUnShNfXbDabCgoKJEk+n2/CY61bt07S6CwtdMwb9fT0
      WIsiJSUlMxo3EE0sMszAli1btGfPHnm9Xr3yyisRnY3drJ6eHkmjK5nhTpdDQtcDJwtcfn6+
      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
    </thumbnail>
  </thumbnails>
</workbook>
